// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packmsg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "packmsg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace comminternal {

namespace {

const ::google::protobuf::Descriptor* PkgMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgMsg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgDirection_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgReplyFlag_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgStatusCode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* PkgSessionUser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgSessionUser_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_packmsg_2eproto() {
  protobuf_AddDesc_packmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "packmsg.proto");
  GOOGLE_CHECK(file != NULL);
  PkgMsg_descriptor_ = file->message_type(0);
  static const int PkgMsg_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, msgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, issuc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, errdevdesc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, msgdirection_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, msgreplyflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, reqmsgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, reqmsgdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, resmsgtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, resmsgdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, msguuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, enmsgstatuscode_),
  };
  PkgMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgMsg_descriptor_,
      PkgMsg::default_instance_,
      PkgMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgMsg, _internal_metadata_),
      -1);
  PkgMsg_EnMsgType_descriptor_ = PkgMsg_descriptor_->enum_type(0);
  PkgMsg_EnMsgDirection_descriptor_ = PkgMsg_descriptor_->enum_type(1);
  PkgMsg_EnMsgReplyFlag_descriptor_ = PkgMsg_descriptor_->enum_type(2);
  PkgMsg_EnMsgStatusCode_descriptor_ = PkgMsg_descriptor_->enum_type(3);
  PkgSessionUser_descriptor_ = file->message_type(1);
  static const int PkgSessionUser_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, useruuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, islogined_),
  };
  PkgSessionUser_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgSessionUser_descriptor_,
      PkgSessionUser::default_instance_,
      PkgSessionUser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgSessionUser),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgSessionUser, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_packmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgMsg_descriptor_, &PkgMsg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgSessionUser_descriptor_, &PkgSessionUser::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_packmsg_2eproto() {
  delete PkgMsg::default_instance_;
  delete PkgMsg_reflection_;
  delete PkgSessionUser::default_instance_;
  delete PkgSessionUser_reflection_;
}

void protobuf_AddDesc_packmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rpackmsg.proto\022\014comminternal\"\317\005\n\006PkgMsg"
    "\0228\n\007msgtype\030\001 \001(\0162\036.comminternal.PkgMsg."
    "EnMsgType:\007MSG_REQ\022\r\n\005issuc\030\002 \001(\010\022\013\n\003err"
    "\030\003 \001(\t\022\022\n\nerrdevdesc\030\004 \001(\t\022A\n\014msgdirecti"
    "on\030\005 \001(\0162#.comminternal.PkgMsg.EnMsgDire"
    "ction:\006MSG_CS\022J\n\014msgreplyflag\030\006 \001(\0162#.co"
    "mminternal.PkgMsg.EnMsgReplyFlag:\017MSG_Re"
    "plyNormal\022\022\n\nreqmsgtype\030\013 \001(\t\022\022\n\nreqmsgd"
    "ata\030\014 \001(\t\022\022\n\nresmsgtype\030\r \001(\t\022\022\n\nresmsgd"
    "ata\030\016 \001(\t\022\017\n\007msguuid\0302 \001(\t\022M\n\017enmsgstatu"
    "scode\030d \001(\0162$.comminternal.PkgMsg.EnMsgS"
    "tatusCode:\016MSG_STATUSNONE\"@\n\tEnMsgType\022\014"
    "\n\010MSG_NONE\020\000\022\013\n\007MSG_REQ\020\001\022\013\n\007MSG_RES\020\002\022\013"
    "\n\007MSG_ALL\020\003\"B\n\016EnMsgDirection\022\n\n\006MSG_CS\020"
    "\001\022\n\n\006MSG_SC\020\002\022\013\n\007MSG_C2C\020\003\022\013\n\007MSG_S2S\020\004\""
    "L\n\016EnMsgReplyFlag\022\023\n\017MSG_ReplyNormal\020\001\022\024"
    "\n\020MSG_ReplyWithReq\020\002\022\017\n\013MSG_ReplyNO\020\003\"H\n"
    "\017EnMsgStatusCode\022\022\n\016MSG_STATUSNONE\020\000\022\021\n\r"
    "MSG_CONNECTED\020\001\022\016\n\nMSG_CLOSED\020\002\"<\n\016PkgSe"
    "ssionUser\022\020\n\010useruuid\030\001 \001(\t\022\030\n\tislogined"
    "\030\n \001(\010:\005false", 813);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "packmsg.proto", &protobuf_RegisterTypes);
  PkgMsg::default_instance_ = new PkgMsg();
  PkgSessionUser::default_instance_ = new PkgSessionUser();
  PkgMsg::default_instance_->InitAsDefaultInstance();
  PkgSessionUser::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_packmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_packmsg_2eproto {
  StaticDescriptorInitializer_packmsg_2eproto() {
    protobuf_AddDesc_packmsg_2eproto();
  }
} static_descriptor_initializer_packmsg_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgMsg_EnMsgType_descriptor_;
}
bool PkgMsg_EnMsgType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgMsg_EnMsgType PkgMsg::MSG_NONE;
const PkgMsg_EnMsgType PkgMsg::MSG_REQ;
const PkgMsg_EnMsgType PkgMsg::MSG_RES;
const PkgMsg_EnMsgType PkgMsg::MSG_ALL;
const PkgMsg_EnMsgType PkgMsg::EnMsgType_MIN;
const PkgMsg_EnMsgType PkgMsg::EnMsgType_MAX;
const int PkgMsg::EnMsgType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgDirection_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgMsg_EnMsgDirection_descriptor_;
}
bool PkgMsg_EnMsgDirection_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgMsg_EnMsgDirection PkgMsg::MSG_CS;
const PkgMsg_EnMsgDirection PkgMsg::MSG_SC;
const PkgMsg_EnMsgDirection PkgMsg::MSG_C2C;
const PkgMsg_EnMsgDirection PkgMsg::MSG_S2S;
const PkgMsg_EnMsgDirection PkgMsg::EnMsgDirection_MIN;
const PkgMsg_EnMsgDirection PkgMsg::EnMsgDirection_MAX;
const int PkgMsg::EnMsgDirection_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgReplyFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgMsg_EnMsgReplyFlag_descriptor_;
}
bool PkgMsg_EnMsgReplyFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgMsg_EnMsgReplyFlag PkgMsg::MSG_ReplyNormal;
const PkgMsg_EnMsgReplyFlag PkgMsg::MSG_ReplyWithReq;
const PkgMsg_EnMsgReplyFlag PkgMsg::MSG_ReplyNO;
const PkgMsg_EnMsgReplyFlag PkgMsg::EnMsgReplyFlag_MIN;
const PkgMsg_EnMsgReplyFlag PkgMsg::EnMsgReplyFlag_MAX;
const int PkgMsg::EnMsgReplyFlag_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgStatusCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgMsg_EnMsgStatusCode_descriptor_;
}
bool PkgMsg_EnMsgStatusCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const PkgMsg_EnMsgStatusCode PkgMsg::MSG_STATUSNONE;
const PkgMsg_EnMsgStatusCode PkgMsg::MSG_CONNECTED;
const PkgMsg_EnMsgStatusCode PkgMsg::MSG_CLOSED;
const PkgMsg_EnMsgStatusCode PkgMsg::EnMsgStatusCode_MIN;
const PkgMsg_EnMsgStatusCode PkgMsg::EnMsgStatusCode_MAX;
const int PkgMsg::EnMsgStatusCode_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int PkgMsg::kMsgtypeFieldNumber;
const int PkgMsg::kIssucFieldNumber;
const int PkgMsg::kErrFieldNumber;
const int PkgMsg::kErrdevdescFieldNumber;
const int PkgMsg::kMsgdirectionFieldNumber;
const int PkgMsg::kMsgreplyflagFieldNumber;
const int PkgMsg::kReqmsgtypeFieldNumber;
const int PkgMsg::kReqmsgdataFieldNumber;
const int PkgMsg::kResmsgtypeFieldNumber;
const int PkgMsg::kResmsgdataFieldNumber;
const int PkgMsg::kMsguuidFieldNumber;
const int PkgMsg::kEnmsgstatuscodeFieldNumber;
#endif  // !_MSC_VER

PkgMsg::PkgMsg()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comminternal.PkgMsg)
}

void PkgMsg::InitAsDefaultInstance() {
}

PkgMsg::PkgMsg(const PkgMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comminternal.PkgMsg)
}

void PkgMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msgtype_ = 1;
  issuc_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errdevdesc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgdirection_ = 1;
  msgreplyflag_ = 1;
  reqmsgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqmsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resmsgtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resmsgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msguuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  enmsgstatuscode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgMsg::~PkgMsg() {
  // @@protoc_insertion_point(destructor:comminternal.PkgMsg)
  SharedDtor();
}

void PkgMsg::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errdevdesc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqmsgtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reqmsgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resmsgtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resmsgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msguuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgMsg_descriptor_;
}

const PkgMsg& PkgMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packmsg_2eproto();
  return *default_instance_;
}

PkgMsg* PkgMsg::default_instance_ = NULL;

PkgMsg* PkgMsg::New(::google::protobuf::Arena* arena) const {
  PkgMsg* n = new PkgMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgMsg::Clear() {
  if (_has_bits_[0 / 32] & 255) {
    msgtype_ = 1;
    issuc_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_errdevdesc()) {
      errdevdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    msgdirection_ = 1;
    msgreplyflag_ = 1;
    if (has_reqmsgtype()) {
      reqmsgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_reqmsgdata()) {
      reqmsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 3840) {
    if (has_resmsgtype()) {
      resmsgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_resmsgdata()) {
      resmsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_msguuid()) {
      msguuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    enmsgstatuscode_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comminternal.PkgMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .comminternal.PkgMsg.EnMsgType msgtype = 1 [default = MSG_REQ];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comminternal::PkgMsg_EnMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::comminternal::PkgMsg_EnMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_issuc;
        break;
      }

      // optional bool issuc = 2;
      case 2: {
        if (tag == 16) {
         parse_issuc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuc_)));
          set_has_issuc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_err;
        break;
      }

      // optional string err = 3;
      case 3: {
        if (tag == 26) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_errdevdesc;
        break;
      }

      // optional string errdevdesc = 4;
      case 4: {
        if (tag == 34) {
         parse_errdevdesc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errdevdesc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errdevdesc().data(), this->errdevdesc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.errdevdesc");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_msgdirection;
        break;
      }

      // optional .comminternal.PkgMsg.EnMsgDirection msgdirection = 5 [default = MSG_CS];
      case 5: {
        if (tag == 40) {
         parse_msgdirection:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comminternal::PkgMsg_EnMsgDirection_IsValid(value)) {
            set_msgdirection(static_cast< ::comminternal::PkgMsg_EnMsgDirection >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_msgreplyflag;
        break;
      }

      // optional .comminternal.PkgMsg.EnMsgReplyFlag msgreplyflag = 6 [default = MSG_ReplyNormal];
      case 6: {
        if (tag == 48) {
         parse_msgreplyflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comminternal::PkgMsg_EnMsgReplyFlag_IsValid(value)) {
            set_msgreplyflag(static_cast< ::comminternal::PkgMsg_EnMsgReplyFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_reqmsgtype;
        break;
      }

      // optional string reqmsgtype = 11;
      case 11: {
        if (tag == 90) {
         parse_reqmsgtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqmsgtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reqmsgtype().data(), this->reqmsgtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.reqmsgtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_reqmsgdata;
        break;
      }

      // optional string reqmsgdata = 12;
      case 12: {
        if (tag == 98) {
         parse_reqmsgdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reqmsgdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->reqmsgdata().data(), this->reqmsgdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.reqmsgdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_resmsgtype;
        break;
      }

      // optional string resmsgtype = 13;
      case 13: {
        if (tag == 106) {
         parse_resmsgtype:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resmsgtype()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resmsgtype().data(), this->resmsgtype().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.resmsgtype");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_resmsgdata;
        break;
      }

      // optional string resmsgdata = 14;
      case 14: {
        if (tag == 114) {
         parse_resmsgdata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resmsgdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->resmsgdata().data(), this->resmsgdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.resmsgdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_msguuid;
        break;
      }

      // optional string msguuid = 50;
      case 50: {
        if (tag == 402) {
         parse_msguuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msguuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msguuid().data(), this->msguuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgMsg.msguuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(800)) goto parse_enmsgstatuscode;
        break;
      }

      // optional .comminternal.PkgMsg.EnMsgStatusCode enmsgstatuscode = 100 [default = MSG_STATUSNONE];
      case 100: {
        if (tag == 800) {
         parse_enmsgstatuscode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::comminternal::PkgMsg_EnMsgStatusCode_IsValid(value)) {
            set_enmsgstatuscode(static_cast< ::comminternal::PkgMsg_EnMsgStatusCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(100, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comminternal.PkgMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comminternal.PkgMsg)
  return false;
#undef DO_
}

void PkgMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comminternal.PkgMsg)
  // optional .comminternal.PkgMsg.EnMsgType msgtype = 1 [default = MSG_REQ];
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // optional bool issuc = 2;
  if (has_issuc()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->issuc(), output);
  }

  // optional string err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->err(), output);
  }

  // optional string errdevdesc = 4;
  if (has_errdevdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errdevdesc().data(), this->errdevdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.errdevdesc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->errdevdesc(), output);
  }

  // optional .comminternal.PkgMsg.EnMsgDirection msgdirection = 5 [default = MSG_CS];
  if (has_msgdirection()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->msgdirection(), output);
  }

  // optional .comminternal.PkgMsg.EnMsgReplyFlag msgreplyflag = 6 [default = MSG_ReplyNormal];
  if (has_msgreplyflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->msgreplyflag(), output);
  }

  // optional string reqmsgtype = 11;
  if (has_reqmsgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reqmsgtype().data(), this->reqmsgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.reqmsgtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->reqmsgtype(), output);
  }

  // optional string reqmsgdata = 12;
  if (has_reqmsgdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reqmsgdata().data(), this->reqmsgdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.reqmsgdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->reqmsgdata(), output);
  }

  // optional string resmsgtype = 13;
  if (has_resmsgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resmsgtype().data(), this->resmsgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.resmsgtype");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->resmsgtype(), output);
  }

  // optional string resmsgdata = 14;
  if (has_resmsgdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resmsgdata().data(), this->resmsgdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.resmsgdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->resmsgdata(), output);
  }

  // optional string msguuid = 50;
  if (has_msguuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msguuid().data(), this->msguuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.msguuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->msguuid(), output);
  }

  // optional .comminternal.PkgMsg.EnMsgStatusCode enmsgstatuscode = 100 [default = MSG_STATUSNONE];
  if (has_enmsgstatuscode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      100, this->enmsgstatuscode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comminternal.PkgMsg)
}

::google::protobuf::uint8* PkgMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comminternal.PkgMsg)
  // optional .comminternal.PkgMsg.EnMsgType msgtype = 1 [default = MSG_REQ];
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // optional bool issuc = 2;
  if (has_issuc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->issuc(), target);
  }

  // optional string err = 3;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->err(), target);
  }

  // optional string errdevdesc = 4;
  if (has_errdevdesc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errdevdesc().data(), this->errdevdesc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.errdevdesc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->errdevdesc(), target);
  }

  // optional .comminternal.PkgMsg.EnMsgDirection msgdirection = 5 [default = MSG_CS];
  if (has_msgdirection()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->msgdirection(), target);
  }

  // optional .comminternal.PkgMsg.EnMsgReplyFlag msgreplyflag = 6 [default = MSG_ReplyNormal];
  if (has_msgreplyflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->msgreplyflag(), target);
  }

  // optional string reqmsgtype = 11;
  if (has_reqmsgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reqmsgtype().data(), this->reqmsgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.reqmsgtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->reqmsgtype(), target);
  }

  // optional string reqmsgdata = 12;
  if (has_reqmsgdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->reqmsgdata().data(), this->reqmsgdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.reqmsgdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->reqmsgdata(), target);
  }

  // optional string resmsgtype = 13;
  if (has_resmsgtype()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resmsgtype().data(), this->resmsgtype().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.resmsgtype");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->resmsgtype(), target);
  }

  // optional string resmsgdata = 14;
  if (has_resmsgdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->resmsgdata().data(), this->resmsgdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.resmsgdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->resmsgdata(), target);
  }

  // optional string msguuid = 50;
  if (has_msguuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msguuid().data(), this->msguuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgMsg.msguuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->msguuid(), target);
  }

  // optional .comminternal.PkgMsg.EnMsgStatusCode enmsgstatuscode = 100 [default = MSG_STATUSNONE];
  if (has_enmsgstatuscode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      100, this->enmsgstatuscode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comminternal.PkgMsg)
  return target;
}

int PkgMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 255) {
    // optional .comminternal.PkgMsg.EnMsgType msgtype = 1 [default = MSG_REQ];
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional bool issuc = 2;
    if (has_issuc()) {
      total_size += 1 + 1;
    }

    // optional string err = 3;
    if (has_err()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->err());
    }

    // optional string errdevdesc = 4;
    if (has_errdevdesc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errdevdesc());
    }

    // optional .comminternal.PkgMsg.EnMsgDirection msgdirection = 5 [default = MSG_CS];
    if (has_msgdirection()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgdirection());
    }

    // optional .comminternal.PkgMsg.EnMsgReplyFlag msgreplyflag = 6 [default = MSG_ReplyNormal];
    if (has_msgreplyflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgreplyflag());
    }

    // optional string reqmsgtype = 11;
    if (has_reqmsgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqmsgtype());
    }

    // optional string reqmsgdata = 12;
    if (has_reqmsgdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->reqmsgdata());
    }

  }
  if (_has_bits_[8 / 32] & 3840) {
    // optional string resmsgtype = 13;
    if (has_resmsgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resmsgtype());
    }

    // optional string resmsgdata = 14;
    if (has_resmsgdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->resmsgdata());
    }

    // optional string msguuid = 50;
    if (has_msguuid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msguuid());
    }

    // optional .comminternal.PkgMsg.EnMsgStatusCode enmsgstatuscode = 100 [default = MSG_STATUSNONE];
    if (has_enmsgstatuscode()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->enmsgstatuscode());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgMsg::MergeFrom(const PkgMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_issuc()) {
      set_issuc(from.issuc());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
    if (from.has_errdevdesc()) {
      set_has_errdevdesc();
      errdevdesc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errdevdesc_);
    }
    if (from.has_msgdirection()) {
      set_msgdirection(from.msgdirection());
    }
    if (from.has_msgreplyflag()) {
      set_msgreplyflag(from.msgreplyflag());
    }
    if (from.has_reqmsgtype()) {
      set_has_reqmsgtype();
      reqmsgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqmsgtype_);
    }
    if (from.has_reqmsgdata()) {
      set_has_reqmsgdata();
      reqmsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reqmsgdata_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_resmsgtype()) {
      set_has_resmsgtype();
      resmsgtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resmsgtype_);
    }
    if (from.has_resmsgdata()) {
      set_has_resmsgdata();
      resmsgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resmsgdata_);
    }
    if (from.has_msguuid()) {
      set_has_msguuid();
      msguuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msguuid_);
    }
    if (from.has_enmsgstatuscode()) {
      set_enmsgstatuscode(from.enmsgstatuscode());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgMsg::CopyFrom(const PkgMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgMsg::IsInitialized() const {

  return true;
}

void PkgMsg::Swap(PkgMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgMsg::InternalSwap(PkgMsg* other) {
  std::swap(msgtype_, other->msgtype_);
  std::swap(issuc_, other->issuc_);
  err_.Swap(&other->err_);
  errdevdesc_.Swap(&other->errdevdesc_);
  std::swap(msgdirection_, other->msgdirection_);
  std::swap(msgreplyflag_, other->msgreplyflag_);
  reqmsgtype_.Swap(&other->reqmsgtype_);
  reqmsgdata_.Swap(&other->reqmsgdata_);
  resmsgtype_.Swap(&other->resmsgtype_);
  resmsgdata_.Swap(&other->resmsgdata_);
  msguuid_.Swap(&other->msguuid_);
  std::swap(enmsgstatuscode_, other->enmsgstatuscode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgMsg_descriptor_;
  metadata.reflection = PkgMsg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgSessionUser::kUseruuidFieldNumber;
const int PkgSessionUser::kIsloginedFieldNumber;
#endif  // !_MSC_VER

PkgSessionUser::PkgSessionUser()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:comminternal.PkgSessionUser)
}

void PkgSessionUser::InitAsDefaultInstance() {
}

PkgSessionUser::PkgSessionUser(const PkgSessionUser& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:comminternal.PkgSessionUser)
}

void PkgSessionUser::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  useruuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  islogined_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgSessionUser::~PkgSessionUser() {
  // @@protoc_insertion_point(destructor:comminternal.PkgSessionUser)
  SharedDtor();
}

void PkgSessionUser::SharedDtor() {
  useruuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgSessionUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgSessionUser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgSessionUser_descriptor_;
}

const PkgSessionUser& PkgSessionUser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_packmsg_2eproto();
  return *default_instance_;
}

PkgSessionUser* PkgSessionUser::default_instance_ = NULL;

PkgSessionUser* PkgSessionUser::New(::google::protobuf::Arena* arena) const {
  PkgSessionUser* n = new PkgSessionUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgSessionUser::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_useruuid()) {
      useruuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    islogined_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgSessionUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:comminternal.PkgSessionUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string useruuid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_useruuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->useruuid().data(), this->useruuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "comminternal.PkgSessionUser.useruuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(80)) goto parse_islogined;
        break;
      }

      // optional bool islogined = 10 [default = false];
      case 10: {
        if (tag == 80) {
         parse_islogined:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islogined_)));
          set_has_islogined();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:comminternal.PkgSessionUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:comminternal.PkgSessionUser)
  return false;
#undef DO_
}

void PkgSessionUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:comminternal.PkgSessionUser)
  // optional string useruuid = 1;
  if (has_useruuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->useruuid().data(), this->useruuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgSessionUser.useruuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->useruuid(), output);
  }

  // optional bool islogined = 10 [default = false];
  if (has_islogined()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->islogined(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:comminternal.PkgSessionUser)
}

::google::protobuf::uint8* PkgSessionUser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:comminternal.PkgSessionUser)
  // optional string useruuid = 1;
  if (has_useruuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->useruuid().data(), this->useruuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "comminternal.PkgSessionUser.useruuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->useruuid(), target);
  }

  // optional bool islogined = 10 [default = false];
  if (has_islogined()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->islogined(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:comminternal.PkgSessionUser)
  return target;
}

int PkgSessionUser::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3) {
    // optional string useruuid = 1;
    if (has_useruuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->useruuid());
    }

    // optional bool islogined = 10 [default = false];
    if (has_islogined()) {
      total_size += 1 + 1;
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgSessionUser::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgSessionUser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgSessionUser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgSessionUser::MergeFrom(const PkgSessionUser& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_useruuid()) {
      set_has_useruuid();
      useruuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.useruuid_);
    }
    if (from.has_islogined()) {
      set_islogined(from.islogined());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgSessionUser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgSessionUser::CopyFrom(const PkgSessionUser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgSessionUser::IsInitialized() const {

  return true;
}

void PkgSessionUser::Swap(PkgSessionUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgSessionUser::InternalSwap(PkgSessionUser* other) {
  useruuid_.Swap(&other->useruuid_);
  std::swap(islogined_, other->islogined_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgSessionUser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgSessionUser_descriptor_;
  metadata.reflection = PkgSessionUser_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace comminternal

// @@protoc_insertion_point(global_scope)
