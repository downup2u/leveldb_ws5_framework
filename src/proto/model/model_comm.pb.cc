// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model_comm.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model_comm.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace sample_projectname {

namespace {

const ::google::protobuf::Descriptor* PkgUserLoginReq_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReq_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgUserLoginReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgUserLoginReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptTable1Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptTable1Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptTable1Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptTable1Reply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptTable2Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptTable2Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgOptTable2Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgOptTable2Reply_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgQueryCondition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgQueryCondition_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryTable1Req_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryTable1Req_reflection_ = NULL;
const ::google::protobuf::Descriptor* PkgPageQueryTable1Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PkgPageQueryTable1Reply_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* EnGetType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnOperation_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnQueryCondition_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EnPageFlag_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_model_5fcomm_2eproto() {
  protobuf_AddDesc_model_5fcomm_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "model_comm.proto");
  GOOGLE_CHECK(file != NULL);
  PkgUserLoginReq_descriptor_ = file->message_type(0);
  static const int PkgUserLoginReq_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, gettype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, phonenumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, emailaddress_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, hashedserversn_),
  };
  PkgUserLoginReq_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReq_descriptor_,
      PkgUserLoginReq::default_instance_,
      PkgUserLoginReq_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReq),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReq, _internal_metadata_),
      -1);
  PkgUserLoginReply_descriptor_ = file->message_type(1);
  static const int PkgUserLoginReply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, err_),
  };
  PkgUserLoginReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgUserLoginReply_descriptor_,
      PkgUserLoginReply::default_instance_,
      PkgUserLoginReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgUserLoginReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgUserLoginReply, _internal_metadata_),
      -1);
  PkgOptTable1Req_descriptor_ = file->message_type(2);
  static const int PkgOptTable1Req_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Req, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Req, table1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Req, fieldid_),
  };
  PkgOptTable1Req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptTable1Req_descriptor_,
      PkgOptTable1Req::default_instance_,
      PkgOptTable1Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Req, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptTable1Req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Req, _internal_metadata_),
      -1);
  PkgOptTable1Reply_descriptor_ = file->message_type(3);
  static const int PkgOptTable1Reply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Reply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Reply, err_),
  };
  PkgOptTable1Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptTable1Reply_descriptor_,
      PkgOptTable1Reply::default_instance_,
      PkgOptTable1Reply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Reply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptTable1Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable1Reply, _internal_metadata_),
      -1);
  PkgOptTable2Req_descriptor_ = file->message_type(4);
  static const int PkgOptTable2Req_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Req, opt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Req, table2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Req, fieldid_),
  };
  PkgOptTable2Req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptTable2Req_descriptor_,
      PkgOptTable2Req::default_instance_,
      PkgOptTable2Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Req, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptTable2Req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Req, _internal_metadata_),
      -1);
  PkgOptTable2Reply_descriptor_ = file->message_type(5);
  static const int PkgOptTable2Reply_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Reply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Reply, err_),
  };
  PkgOptTable2Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgOptTable2Reply_descriptor_,
      PkgOptTable2Reply::default_instance_,
      PkgOptTable2Reply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Reply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgOptTable2Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgOptTable2Reply, _internal_metadata_),
      -1);
  PkgQueryCondition_descriptor_ = file->message_type(6);
  static const int PkgQueryCondition_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, taskdatestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, taskdateend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, keyforname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, keyforcontent_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, keyfielduuid_),
  };
  PkgQueryCondition_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgQueryCondition_descriptor_,
      PkgQueryCondition::default_instance_,
      PkgQueryCondition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgQueryCondition),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgQueryCondition, _internal_metadata_),
      -1);
  PkgPageQueryTable1Req_descriptor_ = file->message_type(7);
  static const int PkgPageQueryTable1Req_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, enconditon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, pkgquerycondition_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, pageflag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, indexstart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, indexend_),
  };
  PkgPageQueryTable1Req_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryTable1Req_descriptor_,
      PkgPageQueryTable1Req::default_instance_,
      PkgPageQueryTable1Req_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryTable1Req),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Req, _internal_metadata_),
      -1);
  PkgPageQueryTable1Reply_descriptor_ = file->message_type(8);
  static const int PkgPageQueryTable1Reply_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Reply, issuccess_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Reply, err_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Reply, rows_),
  };
  PkgPageQueryTable1Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PkgPageQueryTable1Reply_descriptor_,
      PkgPageQueryTable1Reply::default_instance_,
      PkgPageQueryTable1Reply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Reply, _has_bits_[0]),
      -1,
      -1,
      sizeof(PkgPageQueryTable1Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PkgPageQueryTable1Reply, _internal_metadata_),
      -1);
  EnGetType_descriptor_ = file->enum_type(0);
  EnOperation_descriptor_ = file->enum_type(1);
  EnQueryCondition_descriptor_ = file->enum_type(2);
  EnPageFlag_descriptor_ = file->enum_type(3);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_model_5fcomm_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReq_descriptor_, &PkgUserLoginReq::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgUserLoginReply_descriptor_, &PkgUserLoginReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptTable1Req_descriptor_, &PkgOptTable1Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptTable1Reply_descriptor_, &PkgOptTable1Reply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptTable2Req_descriptor_, &PkgOptTable2Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgOptTable2Reply_descriptor_, &PkgOptTable2Reply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgQueryCondition_descriptor_, &PkgQueryCondition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryTable1Req_descriptor_, &PkgPageQueryTable1Req::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PkgPageQueryTable1Reply_descriptor_, &PkgPageQueryTable1Reply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_model_5fcomm_2eproto() {
  delete PkgUserLoginReq::default_instance_;
  delete PkgUserLoginReq_reflection_;
  delete PkgUserLoginReply::default_instance_;
  delete PkgUserLoginReply_reflection_;
  delete PkgOptTable1Req::default_instance_;
  delete PkgOptTable1Req_reflection_;
  delete PkgOptTable1Reply::default_instance_;
  delete PkgOptTable1Reply_reflection_;
  delete PkgOptTable2Req::default_instance_;
  delete PkgOptTable2Req_reflection_;
  delete PkgOptTable2Reply::default_instance_;
  delete PkgOptTable2Reply_reflection_;
  delete PkgQueryCondition::default_instance_;
  delete PkgQueryCondition_reflection_;
  delete PkgPageQueryTable1Req::default_instance_;
  delete PkgPageQueryTable1Req_reflection_;
  delete PkgPageQueryTable1Reply::default_instance_;
  delete PkgPageQueryTable1Reply_reflection_;
}

void protobuf_AddDesc_model_5fcomm_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::sample_projectname::protobuf_AddDesc_model_5fdb_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020model_comm.proto\022\022sample_projectname\032\016"
    "model_db.proto\"\302\001\n\017PkgUserLoginReq\0228\n\007ge"
    "ttype\030\001 \002(\0162\035.sample_projectname.EnGetTy"
    "pe:\010GT_PHONE\022\016\n\006userid\030\002 \001(\005\022\023\n\013phonenum"
    "ber\030\003 \001(\t\022\024\n\014emailaddress\030\004 \001(\t\022\020\n\010usern"
    "ame\030\005 \001(\t\022\020\n\010password\030\n \002(\t\022\026\n\016hashedser"
    "versn\030d \001(\t\"9\n\021PkgUserLoginReply\022\027\n\tissu"
    "ccess\030\001 \002(\010:\004true\022\013\n\003err\030\002 \001(\t\"\177\n\017PkgOpt"
    "Table1Req\022,\n\003opt\030\001 \002(\0162\037.sample_projectn"
    "ame.EnOperation\022-\n\006table1\030\002 \001(\0132\035.sample"
    "_projectname.db_table1\022\017\n\007fieldid\030\003 \001(\t\""
    "3\n\021PkgOptTable1Reply\022\021\n\tissuccess\030\001 \002(\010\022"
    "\013\n\003err\030\002 \001(\t\"\177\n\017PkgOptTable2Req\022,\n\003opt\030\001"
    " \002(\0162\037.sample_projectname.EnOperation\022-\n"
    "\006table2\030\002 \001(\0132\035.sample_projectname.db_ta"
    "ble1\022\017\n\007fieldid\030\003 \001(\t\"3\n\021PkgOptTable2Rep"
    "ly\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t\"\200\001\n\021P"
    "kgQueryCondition\022\025\n\rtaskdatestart\030\002 \001(\t\022"
    "\023\n\013taskdateend\030\003 \001(\t\022\022\n\nkeyforname\030\004 \001(\t"
    "\022\025\n\rkeyforcontent\030\005 \001(\t\022\024\n\014keyfielduuid\030"
    "\n \001(\t\"\325\001\n\025PkgPageQueryTable1Req\022\025\n\nencon"
    "diton\030\002 \001(\005:\0010\022@\n\021pkgquerycondition\030\003 \001("
    "\0132%.sample_projectname.PkgQueryCondition"
    "\022=\n\010pageflag\030\004 \001(\0162\036.sample_projectname."
    "EnPageFlag:\013P_RETURNALL\022\022\n\nindexstart\030\005 "
    "\001(\005\022\020\n\010indexend\030\006 \001(\005\"f\n\027PkgPageQueryTab"
    "le1Reply\022\021\n\tissuccess\030\001 \002(\010\022\013\n\003err\030\002 \001(\t"
    "\022+\n\004rows\030\n \003(\0132\035.sample_projectname.db_t"
    "able1*G\n\tEnGetType\022\014\n\010GT_PHONE\020\000\022\014\n\010GT_E"
    "MAIL\020\001\022\r\n\tGT_USERID\020\002\022\017\n\013GT_USERNAME\020\003*:"
    "\n\013EnOperation\022\r\n\tTO_INSERT\020\001\022\r\n\tTO_UPDAT"
    "E\020\020\022\r\n\tTO_DELETE\020@*w\n\020EnQueryCondition\022\021"
    "\n\rTQC_DATESTART\020\001\022\017\n\013TQC_DATEEND\020\002\022\022\n\016TQ"
    "C_KEYFORNAME\020\004\022\025\n\021TQC_KEYFORCONTENT\020\010\022\024\n"
    "\020TQC_KEYFIELDUUID\020\020*>\n\nEnPageFlag\022\r\n\tP_O"
    "NLYNUM\020\001\022\017\n\013P_RETURNALL\020\002\022\020\n\014P_RETURNPAG"
    "E\020\003", 1443);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "model_comm.proto", &protobuf_RegisterTypes);
  PkgUserLoginReq::default_instance_ = new PkgUserLoginReq();
  PkgUserLoginReply::default_instance_ = new PkgUserLoginReply();
  PkgOptTable1Req::default_instance_ = new PkgOptTable1Req();
  PkgOptTable1Reply::default_instance_ = new PkgOptTable1Reply();
  PkgOptTable2Req::default_instance_ = new PkgOptTable2Req();
  PkgOptTable2Reply::default_instance_ = new PkgOptTable2Reply();
  PkgQueryCondition::default_instance_ = new PkgQueryCondition();
  PkgPageQueryTable1Req::default_instance_ = new PkgPageQueryTable1Req();
  PkgPageQueryTable1Reply::default_instance_ = new PkgPageQueryTable1Reply();
  PkgUserLoginReq::default_instance_->InitAsDefaultInstance();
  PkgUserLoginReply::default_instance_->InitAsDefaultInstance();
  PkgOptTable1Req::default_instance_->InitAsDefaultInstance();
  PkgOptTable1Reply::default_instance_->InitAsDefaultInstance();
  PkgOptTable2Req::default_instance_->InitAsDefaultInstance();
  PkgOptTable2Reply::default_instance_->InitAsDefaultInstance();
  PkgQueryCondition::default_instance_->InitAsDefaultInstance();
  PkgPageQueryTable1Req::default_instance_->InitAsDefaultInstance();
  PkgPageQueryTable1Reply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_model_5fcomm_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_model_5fcomm_2eproto {
  StaticDescriptorInitializer_model_5fcomm_2eproto() {
    protobuf_AddDesc_model_5fcomm_2eproto();
  }
} static_descriptor_initializer_model_5fcomm_2eproto_;
const ::google::protobuf::EnumDescriptor* EnGetType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnGetType_descriptor_;
}
bool EnGetType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnOperation_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnOperation_descriptor_;
}
bool EnOperation_IsValid(int value) {
  switch(value) {
    case 1:
    case 16:
    case 64:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnQueryCondition_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnQueryCondition_descriptor_;
}
bool EnQueryCondition_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EnPageFlag_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EnPageFlag_descriptor_;
}
bool EnPageFlag_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReq::kGettypeFieldNumber;
const int PkgUserLoginReq::kUseridFieldNumber;
const int PkgUserLoginReq::kPhonenumberFieldNumber;
const int PkgUserLoginReq::kEmailaddressFieldNumber;
const int PkgUserLoginReq::kUsernameFieldNumber;
const int PkgUserLoginReq::kPasswordFieldNumber;
const int PkgUserLoginReq::kHashedserversnFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReq::PkgUserLoginReq()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgUserLoginReq)
}

void PkgUserLoginReq::InitAsDefaultInstance() {
}

PkgUserLoginReq::PkgUserLoginReq(const PkgUserLoginReq& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgUserLoginReq)
}

void PkgUserLoginReq::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  gettype_ = 0;
  userid_ = 0;
  phonenumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReq::~PkgUserLoginReq() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgUserLoginReq)
  SharedDtor();
}

void PkgUserLoginReq::SharedDtor() {
  phonenumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  emailaddress_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hashedserversn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserLoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReq::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReq_descriptor_;
}

const PkgUserLoginReq& PkgUserLoginReq::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgUserLoginReq* PkgUserLoginReq::default_instance_ = NULL;

PkgUserLoginReq* PkgUserLoginReq::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReq* n = new PkgUserLoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReq::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgUserLoginReq*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 127) {
    ZR_(gettype_, userid_);
    if (has_phonenumber()) {
      phonenumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_emailaddress()) {
      emailaddress_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_username()) {
      username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_password()) {
      password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hashedserversn()) {
      hashedserversn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgUserLoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sample_projectname.EnGetType gettype = 1 [default = GT_PHONE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sample_projectname::EnGetType_IsValid(value)) {
            set_gettype(static_cast< ::sample_projectname::EnGetType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_userid;
        break;
      }

      // optional int32 userid = 2;
      case 2: {
        if (tag == 16) {
         parse_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
          set_has_userid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phonenumber;
        break;
      }

      // optional string phonenumber = 3;
      case 3: {
        if (tag == 26) {
         parse_phonenumber:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phonenumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phonenumber().data(), this->phonenumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgUserLoginReq.phonenumber");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_emailaddress;
        break;
      }

      // optional string emailaddress = 4;
      case 4: {
        if (tag == 34) {
         parse_emailaddress:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_emailaddress()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->emailaddress().data(), this->emailaddress().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgUserLoginReq.emailaddress");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_username;
        break;
      }

      // optional string username = 5;
      case 5: {
        if (tag == 42) {
         parse_username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgUserLoginReq.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_password;
        break;
      }

      // required string password = 10;
      case 10: {
        if (tag == 82) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgUserLoginReq.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(802)) goto parse_hashedserversn;
        break;
      }

      // optional string hashedserversn = 100;
      case 100: {
        if (tag == 802) {
         parse_hashedserversn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hashedserversn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hashedserversn().data(), this->hashedserversn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgUserLoginReq.hashedserversn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgUserLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgUserLoginReq)
  return false;
#undef DO_
}

void PkgUserLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgUserLoginReq)
  // required .sample_projectname.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->gettype(), output);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.phonenumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phonenumber(), output);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.emailaddress");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->emailaddress(), output);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->username(), output);
  }

  // required string password = 10;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->password(), output);
  }

  // optional string hashedserversn = 100;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.hashedserversn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->hashedserversn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgUserLoginReq)
}

::google::protobuf::uint8* PkgUserLoginReq::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgUserLoginReq)
  // required .sample_projectname.EnGetType gettype = 1 [default = GT_PHONE];
  if (has_gettype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->gettype(), target);
  }

  // optional int32 userid = 2;
  if (has_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // optional string phonenumber = 3;
  if (has_phonenumber()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phonenumber().data(), this->phonenumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.phonenumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phonenumber(), target);
  }

  // optional string emailaddress = 4;
  if (has_emailaddress()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->emailaddress().data(), this->emailaddress().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.emailaddress");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->emailaddress(), target);
  }

  // optional string username = 5;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->username(), target);
  }

  // required string password = 10;
  if (has_password()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->password(), target);
  }

  // optional string hashedserversn = 100;
  if (has_hashedserversn()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hashedserversn().data(), this->hashedserversn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReq.hashedserversn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->hashedserversn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgUserLoginReq)
  return target;
}

int PkgUserLoginReq::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_gettype()) {
    // required .sample_projectname.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());
  }

  if (has_password()) {
    // required string password = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
int PkgUserLoginReq::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000021) ^ 0x00000021) == 0) {  // All required fields are present.
    // required .sample_projectname.EnGetType gettype = 1 [default = GT_PHONE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gettype());

    // required string password = 10;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[1 / 32] & 94) {
    // optional int32 userid = 2;
    if (has_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->userid());
    }

    // optional string phonenumber = 3;
    if (has_phonenumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phonenumber());
    }

    // optional string emailaddress = 4;
    if (has_emailaddress()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->emailaddress());
    }

    // optional string username = 5;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string hashedserversn = 100;
    if (has_hashedserversn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hashedserversn());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReq* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReq*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReq::MergeFrom(const PkgUserLoginReq& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gettype()) {
      set_gettype(from.gettype());
    }
    if (from.has_userid()) {
      set_userid(from.userid());
    }
    if (from.has_phonenumber()) {
      set_has_phonenumber();
      phonenumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phonenumber_);
    }
    if (from.has_emailaddress()) {
      set_has_emailaddress();
      emailaddress_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.emailaddress_);
    }
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_password()) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (from.has_hashedserversn()) {
      set_has_hashedserversn();
      hashedserversn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hashedserversn_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReq::CopyFrom(const PkgUserLoginReq& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReq::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000021) != 0x00000021) return false;

  return true;
}

void PkgUserLoginReq::Swap(PkgUserLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReq::InternalSwap(PkgUserLoginReq* other) {
  std::swap(gettype_, other->gettype_);
  std::swap(userid_, other->userid_);
  phonenumber_.Swap(&other->phonenumber_);
  emailaddress_.Swap(&other->emailaddress_);
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  hashedserversn_.Swap(&other->hashedserversn_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReq::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReq_descriptor_;
  metadata.reflection = PkgUserLoginReq_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgUserLoginReply::kIssuccessFieldNumber;
const int PkgUserLoginReply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgUserLoginReply::PkgUserLoginReply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgUserLoginReply)
}

void PkgUserLoginReply::InitAsDefaultInstance() {
}

PkgUserLoginReply::PkgUserLoginReply(const PkgUserLoginReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgUserLoginReply)
}

void PkgUserLoginReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = true;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgUserLoginReply::~PkgUserLoginReply() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgUserLoginReply)
  SharedDtor();
}

void PkgUserLoginReply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgUserLoginReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgUserLoginReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgUserLoginReply_descriptor_;
}

const PkgUserLoginReply& PkgUserLoginReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgUserLoginReply* PkgUserLoginReply::default_instance_ = NULL;

PkgUserLoginReply* PkgUserLoginReply::New(::google::protobuf::Arena* arena) const {
  PkgUserLoginReply* n = new PkgUserLoginReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgUserLoginReply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = true;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgUserLoginReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgUserLoginReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1 [default = true];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgUserLoginReply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgUserLoginReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgUserLoginReply)
  return false;
#undef DO_
}

void PkgUserLoginReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgUserLoginReply)
}

::google::protobuf::uint8* PkgUserLoginReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgUserLoginReply)
  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgUserLoginReply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgUserLoginReply)
  return target;
}

int PkgUserLoginReply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1 [default = true];
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgUserLoginReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgUserLoginReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgUserLoginReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgUserLoginReply::MergeFrom(const PkgUserLoginReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgUserLoginReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgUserLoginReply::CopyFrom(const PkgUserLoginReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgUserLoginReply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgUserLoginReply::Swap(PkgUserLoginReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgUserLoginReply::InternalSwap(PkgUserLoginReply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgUserLoginReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgUserLoginReply_descriptor_;
  metadata.reflection = PkgUserLoginReply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptTable1Req::kOptFieldNumber;
const int PkgOptTable1Req::kTable1FieldNumber;
const int PkgOptTable1Req::kFieldidFieldNumber;
#endif  // !_MSC_VER

PkgOptTable1Req::PkgOptTable1Req()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgOptTable1Req)
}

void PkgOptTable1Req::InitAsDefaultInstance() {
  table1_ = const_cast< ::sample_projectname::db_table1*>(&::sample_projectname::db_table1::default_instance());
}

PkgOptTable1Req::PkgOptTable1Req(const PkgOptTable1Req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgOptTable1Req)
}

void PkgOptTable1Req::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_ = 1;
  table1_ = NULL;
  fieldid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptTable1Req::~PkgOptTable1Req() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgOptTable1Req)
  SharedDtor();
}

void PkgOptTable1Req::SharedDtor() {
  fieldid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete table1_;
  }
}

void PkgOptTable1Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptTable1Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptTable1Req_descriptor_;
}

const PkgOptTable1Req& PkgOptTable1Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgOptTable1Req* PkgOptTable1Req::default_instance_ = NULL;

PkgOptTable1Req* PkgOptTable1Req::New(::google::protobuf::Arena* arena) const {
  PkgOptTable1Req* n = new PkgOptTable1Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptTable1Req::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    opt_ = 1;
    if (has_table1()) {
      if (table1_ != NULL) table1_->::sample_projectname::db_table1::Clear();
    }
    if (has_fieldid()) {
      fieldid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptTable1Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgOptTable1Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sample_projectname.EnOperation opt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sample_projectname::EnOperation_IsValid(value)) {
            set_opt(static_cast< ::sample_projectname::EnOperation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_table1;
        break;
      }

      // optional .sample_projectname.db_table1 table1 = 2;
      case 2: {
        if (tag == 18) {
         parse_table1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table1()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fieldid;
        break;
      }

      // optional string fieldid = 3;
      case 3: {
        if (tag == 26) {
         parse_fieldid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fieldid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fieldid().data(), this->fieldid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgOptTable1Req.fieldid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgOptTable1Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgOptTable1Req)
  return false;
#undef DO_
}

void PkgOptTable1Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgOptTable1Req)
  // required .sample_projectname.EnOperation opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opt(), output);
  }

  // optional .sample_projectname.db_table1 table1 = 2;
  if (has_table1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->table1_, output);
  }

  // optional string fieldid = 3;
  if (has_fieldid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fieldid().data(), this->fieldid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable1Req.fieldid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fieldid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgOptTable1Req)
}

::google::protobuf::uint8* PkgOptTable1Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgOptTable1Req)
  // required .sample_projectname.EnOperation opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opt(), target);
  }

  // optional .sample_projectname.db_table1 table1 = 2;
  if (has_table1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->table1_, target);
  }

  // optional string fieldid = 3;
  if (has_fieldid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fieldid().data(), this->fieldid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable1Req.fieldid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fieldid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgOptTable1Req)
  return target;
}

int PkgOptTable1Req::ByteSize() const {
  int total_size = 0;

  // required .sample_projectname.EnOperation opt = 1;
  if (has_opt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .sample_projectname.db_table1 table1 = 2;
    if (has_table1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->table1_);
    }

    // optional string fieldid = 3;
    if (has_fieldid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fieldid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptTable1Req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptTable1Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptTable1Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptTable1Req::MergeFrom(const PkgOptTable1Req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_table1()) {
      mutable_table1()->::sample_projectname::db_table1::MergeFrom(from.table1());
    }
    if (from.has_fieldid()) {
      set_has_fieldid();
      fieldid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fieldid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptTable1Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptTable1Req::CopyFrom(const PkgOptTable1Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptTable1Req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptTable1Req::Swap(PkgOptTable1Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptTable1Req::InternalSwap(PkgOptTable1Req* other) {
  std::swap(opt_, other->opt_);
  std::swap(table1_, other->table1_);
  fieldid_.Swap(&other->fieldid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptTable1Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptTable1Req_descriptor_;
  metadata.reflection = PkgOptTable1Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptTable1Reply::kIssuccessFieldNumber;
const int PkgOptTable1Reply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgOptTable1Reply::PkgOptTable1Reply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgOptTable1Reply)
}

void PkgOptTable1Reply::InitAsDefaultInstance() {
}

PkgOptTable1Reply::PkgOptTable1Reply(const PkgOptTable1Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgOptTable1Reply)
}

void PkgOptTable1Reply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptTable1Reply::~PkgOptTable1Reply() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgOptTable1Reply)
  SharedDtor();
}

void PkgOptTable1Reply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgOptTable1Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptTable1Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptTable1Reply_descriptor_;
}

const PkgOptTable1Reply& PkgOptTable1Reply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgOptTable1Reply* PkgOptTable1Reply::default_instance_ = NULL;

PkgOptTable1Reply* PkgOptTable1Reply::New(::google::protobuf::Arena* arena) const {
  PkgOptTable1Reply* n = new PkgOptTable1Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptTable1Reply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptTable1Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgOptTable1Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgOptTable1Reply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgOptTable1Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgOptTable1Reply)
  return false;
#undef DO_
}

void PkgOptTable1Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgOptTable1Reply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable1Reply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgOptTable1Reply)
}

::google::protobuf::uint8* PkgOptTable1Reply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgOptTable1Reply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable1Reply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgOptTable1Reply)
  return target;
}

int PkgOptTable1Reply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptTable1Reply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptTable1Reply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptTable1Reply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptTable1Reply::MergeFrom(const PkgOptTable1Reply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptTable1Reply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptTable1Reply::CopyFrom(const PkgOptTable1Reply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptTable1Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptTable1Reply::Swap(PkgOptTable1Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptTable1Reply::InternalSwap(PkgOptTable1Reply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptTable1Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptTable1Reply_descriptor_;
  metadata.reflection = PkgOptTable1Reply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptTable2Req::kOptFieldNumber;
const int PkgOptTable2Req::kTable2FieldNumber;
const int PkgOptTable2Req::kFieldidFieldNumber;
#endif  // !_MSC_VER

PkgOptTable2Req::PkgOptTable2Req()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgOptTable2Req)
}

void PkgOptTable2Req::InitAsDefaultInstance() {
  table2_ = const_cast< ::sample_projectname::db_table1*>(&::sample_projectname::db_table1::default_instance());
}

PkgOptTable2Req::PkgOptTable2Req(const PkgOptTable2Req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgOptTable2Req)
}

void PkgOptTable2Req::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  opt_ = 1;
  table2_ = NULL;
  fieldid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptTable2Req::~PkgOptTable2Req() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgOptTable2Req)
  SharedDtor();
}

void PkgOptTable2Req::SharedDtor() {
  fieldid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete table2_;
  }
}

void PkgOptTable2Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptTable2Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptTable2Req_descriptor_;
}

const PkgOptTable2Req& PkgOptTable2Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgOptTable2Req* PkgOptTable2Req::default_instance_ = NULL;

PkgOptTable2Req* PkgOptTable2Req::New(::google::protobuf::Arena* arena) const {
  PkgOptTable2Req* n = new PkgOptTable2Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptTable2Req::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    opt_ = 1;
    if (has_table2()) {
      if (table2_ != NULL) table2_->::sample_projectname::db_table1::Clear();
    }
    if (has_fieldid()) {
      fieldid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptTable2Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgOptTable2Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .sample_projectname.EnOperation opt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sample_projectname::EnOperation_IsValid(value)) {
            set_opt(static_cast< ::sample_projectname::EnOperation >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_table2;
        break;
      }

      // optional .sample_projectname.db_table1 table2 = 2;
      case 2: {
        if (tag == 18) {
         parse_table2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_table2()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_fieldid;
        break;
      }

      // optional string fieldid = 3;
      case 3: {
        if (tag == 26) {
         parse_fieldid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fieldid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fieldid().data(), this->fieldid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgOptTable2Req.fieldid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgOptTable2Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgOptTable2Req)
  return false;
#undef DO_
}

void PkgOptTable2Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgOptTable2Req)
  // required .sample_projectname.EnOperation opt = 1;
  if (has_opt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->opt(), output);
  }

  // optional .sample_projectname.db_table1 table2 = 2;
  if (has_table2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->table2_, output);
  }

  // optional string fieldid = 3;
  if (has_fieldid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fieldid().data(), this->fieldid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable2Req.fieldid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fieldid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgOptTable2Req)
}

::google::protobuf::uint8* PkgOptTable2Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgOptTable2Req)
  // required .sample_projectname.EnOperation opt = 1;
  if (has_opt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->opt(), target);
  }

  // optional .sample_projectname.db_table1 table2 = 2;
  if (has_table2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->table2_, target);
  }

  // optional string fieldid = 3;
  if (has_fieldid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fieldid().data(), this->fieldid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable2Req.fieldid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fieldid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgOptTable2Req)
  return target;
}

int PkgOptTable2Req::ByteSize() const {
  int total_size = 0;

  // required .sample_projectname.EnOperation opt = 1;
  if (has_opt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->opt());
  }
  if (_has_bits_[1 / 32] & 6) {
    // optional .sample_projectname.db_table1 table2 = 2;
    if (has_table2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->table2_);
    }

    // optional string fieldid = 3;
    if (has_fieldid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fieldid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptTable2Req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptTable2Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptTable2Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptTable2Req::MergeFrom(const PkgOptTable2Req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_opt()) {
      set_opt(from.opt());
    }
    if (from.has_table2()) {
      mutable_table2()->::sample_projectname::db_table1::MergeFrom(from.table2());
    }
    if (from.has_fieldid()) {
      set_has_fieldid();
      fieldid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fieldid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptTable2Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptTable2Req::CopyFrom(const PkgOptTable2Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptTable2Req::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptTable2Req::Swap(PkgOptTable2Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptTable2Req::InternalSwap(PkgOptTable2Req* other) {
  std::swap(opt_, other->opt_);
  std::swap(table2_, other->table2_);
  fieldid_.Swap(&other->fieldid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptTable2Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptTable2Req_descriptor_;
  metadata.reflection = PkgOptTable2Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgOptTable2Reply::kIssuccessFieldNumber;
const int PkgOptTable2Reply::kErrFieldNumber;
#endif  // !_MSC_VER

PkgOptTable2Reply::PkgOptTable2Reply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgOptTable2Reply)
}

void PkgOptTable2Reply::InitAsDefaultInstance() {
}

PkgOptTable2Reply::PkgOptTable2Reply(const PkgOptTable2Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgOptTable2Reply)
}

void PkgOptTable2Reply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgOptTable2Reply::~PkgOptTable2Reply() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgOptTable2Reply)
  SharedDtor();
}

void PkgOptTable2Reply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgOptTable2Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgOptTable2Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgOptTable2Reply_descriptor_;
}

const PkgOptTable2Reply& PkgOptTable2Reply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgOptTable2Reply* PkgOptTable2Reply::default_instance_ = NULL;

PkgOptTable2Reply* PkgOptTable2Reply::New(::google::protobuf::Arena* arena) const {
  PkgOptTable2Reply* n = new PkgOptTable2Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgOptTable2Reply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgOptTable2Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgOptTable2Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgOptTable2Reply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgOptTable2Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgOptTable2Reply)
  return false;
#undef DO_
}

void PkgOptTable2Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgOptTable2Reply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable2Reply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgOptTable2Reply)
}

::google::protobuf::uint8* PkgOptTable2Reply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgOptTable2Reply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgOptTable2Reply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgOptTable2Reply)
  return target;
}

int PkgOptTable2Reply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgOptTable2Reply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgOptTable2Reply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgOptTable2Reply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgOptTable2Reply::MergeFrom(const PkgOptTable2Reply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgOptTable2Reply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgOptTable2Reply::CopyFrom(const PkgOptTable2Reply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgOptTable2Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgOptTable2Reply::Swap(PkgOptTable2Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgOptTable2Reply::InternalSwap(PkgOptTable2Reply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgOptTable2Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgOptTable2Reply_descriptor_;
  metadata.reflection = PkgOptTable2Reply_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgQueryCondition::kTaskdatestartFieldNumber;
const int PkgQueryCondition::kTaskdateendFieldNumber;
const int PkgQueryCondition::kKeyfornameFieldNumber;
const int PkgQueryCondition::kKeyforcontentFieldNumber;
const int PkgQueryCondition::kKeyfielduuidFieldNumber;
#endif  // !_MSC_VER

PkgQueryCondition::PkgQueryCondition()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgQueryCondition)
}

void PkgQueryCondition::InitAsDefaultInstance() {
}

PkgQueryCondition::PkgQueryCondition(const PkgQueryCondition& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgQueryCondition)
}

void PkgQueryCondition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  taskdatestart_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdateend_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfielduuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgQueryCondition::~PkgQueryCondition() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgQueryCondition)
  SharedDtor();
}

void PkgQueryCondition::SharedDtor() {
  taskdatestart_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  taskdateend_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyforcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keyfielduuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgQueryCondition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgQueryCondition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgQueryCondition_descriptor_;
}

const PkgQueryCondition& PkgQueryCondition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgQueryCondition* PkgQueryCondition::default_instance_ = NULL;

PkgQueryCondition* PkgQueryCondition::New(::google::protobuf::Arena* arena) const {
  PkgQueryCondition* n = new PkgQueryCondition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgQueryCondition::Clear() {
  if (_has_bits_[0 / 32] & 31) {
    if (has_taskdatestart()) {
      taskdatestart_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_taskdateend()) {
      taskdateend_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyforname()) {
      keyforname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyforcontent()) {
      keyforcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_keyfielduuid()) {
      keyfielduuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgQueryCondition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgQueryCondition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string taskdatestart = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdatestart()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdatestart().data(), this->taskdatestart().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgQueryCondition.taskdatestart");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_taskdateend;
        break;
      }

      // optional string taskdateend = 3;
      case 3: {
        if (tag == 26) {
         parse_taskdateend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_taskdateend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->taskdateend().data(), this->taskdateend().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgQueryCondition.taskdateend");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_keyforname;
        break;
      }

      // optional string keyforname = 4;
      case 4: {
        if (tag == 34) {
         parse_keyforname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyforname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyforname().data(), this->keyforname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgQueryCondition.keyforname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_keyforcontent;
        break;
      }

      // optional string keyforcontent = 5;
      case 5: {
        if (tag == 42) {
         parse_keyforcontent:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyforcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyforcontent().data(), this->keyforcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgQueryCondition.keyforcontent");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_keyfielduuid;
        break;
      }

      // optional string keyfielduuid = 10;
      case 10: {
        if (tag == 82) {
         parse_keyfielduuid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyfielduuid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->keyfielduuid().data(), this->keyfielduuid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgQueryCondition.keyfielduuid");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgQueryCondition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgQueryCondition)
  return false;
#undef DO_
}

void PkgQueryCondition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgQueryCondition)
  // optional string taskdatestart = 2;
  if (has_taskdatestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdatestart().data(), this->taskdatestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.taskdatestart");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->taskdatestart(), output);
  }

  // optional string taskdateend = 3;
  if (has_taskdateend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdateend().data(), this->taskdateend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.taskdateend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->taskdateend(), output);
  }

  // optional string keyforname = 4;
  if (has_keyforname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforname().data(), this->keyforname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.keyforname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keyforname(), output);
  }

  // optional string keyforcontent = 5;
  if (has_keyforcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforcontent().data(), this->keyforcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.keyforcontent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->keyforcontent(), output);
  }

  // optional string keyfielduuid = 10;
  if (has_keyfielduuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyfielduuid().data(), this->keyfielduuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.keyfielduuid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->keyfielduuid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgQueryCondition)
}

::google::protobuf::uint8* PkgQueryCondition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgQueryCondition)
  // optional string taskdatestart = 2;
  if (has_taskdatestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdatestart().data(), this->taskdatestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.taskdatestart");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->taskdatestart(), target);
  }

  // optional string taskdateend = 3;
  if (has_taskdateend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->taskdateend().data(), this->taskdateend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.taskdateend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->taskdateend(), target);
  }

  // optional string keyforname = 4;
  if (has_keyforname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforname().data(), this->keyforname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.keyforname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keyforname(), target);
  }

  // optional string keyforcontent = 5;
  if (has_keyforcontent()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyforcontent().data(), this->keyforcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.keyforcontent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->keyforcontent(), target);
  }

  // optional string keyfielduuid = 10;
  if (has_keyfielduuid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->keyfielduuid().data(), this->keyfielduuid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgQueryCondition.keyfielduuid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->keyfielduuid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgQueryCondition)
  return target;
}

int PkgQueryCondition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional string taskdatestart = 2;
    if (has_taskdatestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdatestart());
    }

    // optional string taskdateend = 3;
    if (has_taskdateend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->taskdateend());
    }

    // optional string keyforname = 4;
    if (has_keyforname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyforname());
    }

    // optional string keyforcontent = 5;
    if (has_keyforcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyforcontent());
    }

    // optional string keyfielduuid = 10;
    if (has_keyfielduuid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->keyfielduuid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgQueryCondition::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgQueryCondition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgQueryCondition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgQueryCondition::MergeFrom(const PkgQueryCondition& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_taskdatestart()) {
      set_has_taskdatestart();
      taskdatestart_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdatestart_);
    }
    if (from.has_taskdateend()) {
      set_has_taskdateend();
      taskdateend_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.taskdateend_);
    }
    if (from.has_keyforname()) {
      set_has_keyforname();
      keyforname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyforname_);
    }
    if (from.has_keyforcontent()) {
      set_has_keyforcontent();
      keyforcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyforcontent_);
    }
    if (from.has_keyfielduuid()) {
      set_has_keyfielduuid();
      keyfielduuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyfielduuid_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgQueryCondition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgQueryCondition::CopyFrom(const PkgQueryCondition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgQueryCondition::IsInitialized() const {

  return true;
}

void PkgQueryCondition::Swap(PkgQueryCondition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgQueryCondition::InternalSwap(PkgQueryCondition* other) {
  taskdatestart_.Swap(&other->taskdatestart_);
  taskdateend_.Swap(&other->taskdateend_);
  keyforname_.Swap(&other->keyforname_);
  keyforcontent_.Swap(&other->keyforcontent_);
  keyfielduuid_.Swap(&other->keyfielduuid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgQueryCondition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgQueryCondition_descriptor_;
  metadata.reflection = PkgQueryCondition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryTable1Req::kEnconditonFieldNumber;
const int PkgPageQueryTable1Req::kPkgqueryconditionFieldNumber;
const int PkgPageQueryTable1Req::kPageflagFieldNumber;
const int PkgPageQueryTable1Req::kIndexstartFieldNumber;
const int PkgPageQueryTable1Req::kIndexendFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryTable1Req::PkgPageQueryTable1Req()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgPageQueryTable1Req)
}

void PkgPageQueryTable1Req::InitAsDefaultInstance() {
  pkgquerycondition_ = const_cast< ::sample_projectname::PkgQueryCondition*>(&::sample_projectname::PkgQueryCondition::default_instance());
}

PkgPageQueryTable1Req::PkgPageQueryTable1Req(const PkgPageQueryTable1Req& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgPageQueryTable1Req)
}

void PkgPageQueryTable1Req::SharedCtor() {
  _cached_size_ = 0;
  enconditon_ = 0;
  pkgquerycondition_ = NULL;
  pageflag_ = 2;
  indexstart_ = 0;
  indexend_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryTable1Req::~PkgPageQueryTable1Req() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgPageQueryTable1Req)
  SharedDtor();
}

void PkgPageQueryTable1Req::SharedDtor() {
  if (this != default_instance_) {
    delete pkgquerycondition_;
  }
}

void PkgPageQueryTable1Req::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryTable1Req::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryTable1Req_descriptor_;
}

const PkgPageQueryTable1Req& PkgPageQueryTable1Req::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgPageQueryTable1Req* PkgPageQueryTable1Req::default_instance_ = NULL;

PkgPageQueryTable1Req* PkgPageQueryTable1Req::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryTable1Req* n = new PkgPageQueryTable1Req;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryTable1Req::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<PkgPageQueryTable1Req*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 31) {
    ZR_(indexstart_, indexend_);
    enconditon_ = 0;
    if (has_pkgquerycondition()) {
      if (pkgquerycondition_ != NULL) pkgquerycondition_->::sample_projectname::PkgQueryCondition::Clear();
    }
    pageflag_ = 2;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryTable1Req::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgPageQueryTable1Req)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 enconditon = 2 [default = 0];
      case 2: {
        if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &enconditon_)));
          set_has_enconditon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pkgquerycondition;
        break;
      }

      // optional .sample_projectname.PkgQueryCondition pkgquerycondition = 3;
      case 3: {
        if (tag == 26) {
         parse_pkgquerycondition:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pkgquerycondition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pageflag;
        break;
      }

      // optional .sample_projectname.EnPageFlag pageflag = 4 [default = P_RETURNALL];
      case 4: {
        if (tag == 32) {
         parse_pageflag:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::sample_projectname::EnPageFlag_IsValid(value)) {
            set_pageflag(static_cast< ::sample_projectname::EnPageFlag >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_indexstart;
        break;
      }

      // optional int32 indexstart = 5;
      case 5: {
        if (tag == 40) {
         parse_indexstart:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexstart_)));
          set_has_indexstart();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_indexend;
        break;
      }

      // optional int32 indexend = 6;
      case 6: {
        if (tag == 48) {
         parse_indexend:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &indexend_)));
          set_has_indexend();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgPageQueryTable1Req)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgPageQueryTable1Req)
  return false;
#undef DO_
}

void PkgPageQueryTable1Req::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgPageQueryTable1Req)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->enconditon(), output);
  }

  // optional .sample_projectname.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pkgquerycondition_, output);
  }

  // optional .sample_projectname.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->pageflag(), output);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->indexstart(), output);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->indexend(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgPageQueryTable1Req)
}

::google::protobuf::uint8* PkgPageQueryTable1Req::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgPageQueryTable1Req)
  // optional int32 enconditon = 2 [default = 0];
  if (has_enconditon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->enconditon(), target);
  }

  // optional .sample_projectname.PkgQueryCondition pkgquerycondition = 3;
  if (has_pkgquerycondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, *this->pkgquerycondition_, target);
  }

  // optional .sample_projectname.EnPageFlag pageflag = 4 [default = P_RETURNALL];
  if (has_pageflag()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->pageflag(), target);
  }

  // optional int32 indexstart = 5;
  if (has_indexstart()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->indexstart(), target);
  }

  // optional int32 indexend = 6;
  if (has_indexend()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->indexend(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgPageQueryTable1Req)
  return target;
}

int PkgPageQueryTable1Req::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31) {
    // optional int32 enconditon = 2 [default = 0];
    if (has_enconditon()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->enconditon());
    }

    // optional .sample_projectname.PkgQueryCondition pkgquerycondition = 3;
    if (has_pkgquerycondition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pkgquerycondition_);
    }

    // optional .sample_projectname.EnPageFlag pageflag = 4 [default = P_RETURNALL];
    if (has_pageflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->pageflag());
    }

    // optional int32 indexstart = 5;
    if (has_indexstart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexstart());
    }

    // optional int32 indexend = 6;
    if (has_indexend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->indexend());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryTable1Req::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryTable1Req* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryTable1Req*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryTable1Req::MergeFrom(const PkgPageQueryTable1Req& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_enconditon()) {
      set_enconditon(from.enconditon());
    }
    if (from.has_pkgquerycondition()) {
      mutable_pkgquerycondition()->::sample_projectname::PkgQueryCondition::MergeFrom(from.pkgquerycondition());
    }
    if (from.has_pageflag()) {
      set_pageflag(from.pageflag());
    }
    if (from.has_indexstart()) {
      set_indexstart(from.indexstart());
    }
    if (from.has_indexend()) {
      set_indexend(from.indexend());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryTable1Req::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryTable1Req::CopyFrom(const PkgPageQueryTable1Req& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryTable1Req::IsInitialized() const {

  return true;
}

void PkgPageQueryTable1Req::Swap(PkgPageQueryTable1Req* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryTable1Req::InternalSwap(PkgPageQueryTable1Req* other) {
  std::swap(enconditon_, other->enconditon_);
  std::swap(pkgquerycondition_, other->pkgquerycondition_);
  std::swap(pageflag_, other->pageflag_);
  std::swap(indexstart_, other->indexstart_);
  std::swap(indexend_, other->indexend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryTable1Req::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryTable1Req_descriptor_;
  metadata.reflection = PkgPageQueryTable1Req_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PkgPageQueryTable1Reply::kIssuccessFieldNumber;
const int PkgPageQueryTable1Reply::kErrFieldNumber;
const int PkgPageQueryTable1Reply::kRowsFieldNumber;
#endif  // !_MSC_VER

PkgPageQueryTable1Reply::PkgPageQueryTable1Reply()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:sample_projectname.PkgPageQueryTable1Reply)
}

void PkgPageQueryTable1Reply::InitAsDefaultInstance() {
}

PkgPageQueryTable1Reply::PkgPageQueryTable1Reply(const PkgPageQueryTable1Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:sample_projectname.PkgPageQueryTable1Reply)
}

void PkgPageQueryTable1Reply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  issuccess_ = false;
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PkgPageQueryTable1Reply::~PkgPageQueryTable1Reply() {
  // @@protoc_insertion_point(destructor:sample_projectname.PkgPageQueryTable1Reply)
  SharedDtor();
}

void PkgPageQueryTable1Reply::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void PkgPageQueryTable1Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PkgPageQueryTable1Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PkgPageQueryTable1Reply_descriptor_;
}

const PkgPageQueryTable1Reply& PkgPageQueryTable1Reply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_model_5fcomm_2eproto();
  return *default_instance_;
}

PkgPageQueryTable1Reply* PkgPageQueryTable1Reply::default_instance_ = NULL;

PkgPageQueryTable1Reply* PkgPageQueryTable1Reply::New(::google::protobuf::Arena* arena) const {
  PkgPageQueryTable1Reply* n = new PkgPageQueryTable1Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PkgPageQueryTable1Reply::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    issuccess_ = false;
    if (has_err()) {
      err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  rows_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PkgPageQueryTable1Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:sample_projectname.PkgPageQueryTable1Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bool issuccess = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccess_)));
          set_has_issuccess();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_err;
        break;
      }

      // optional string err = 2;
      case 2: {
        if (tag == 18) {
         parse_err:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_err()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->err().data(), this->err().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "sample_projectname.PkgPageQueryTable1Reply.err");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        break;
      }

      // repeated .sample_projectname.db_table1 rows = 10;
      case 10: {
        if (tag == 82) {
         parse_rows:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rows()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_rows;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:sample_projectname.PkgPageQueryTable1Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:sample_projectname.PkgPageQueryTable1Reply)
  return false;
#undef DO_
}

void PkgPageQueryTable1Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:sample_projectname.PkgPageQueryTable1Reply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccess(), output);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgPageQueryTable1Reply.err");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->err(), output);
  }

  // repeated .sample_projectname.db_table1 rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->rows(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:sample_projectname.PkgPageQueryTable1Reply)
}

::google::protobuf::uint8* PkgPageQueryTable1Reply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:sample_projectname.PkgPageQueryTable1Reply)
  // required bool issuccess = 1;
  if (has_issuccess()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccess(), target);
  }

  // optional string err = 2;
  if (has_err()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->err().data(), this->err().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "sample_projectname.PkgPageQueryTable1Reply.err");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->err(), target);
  }

  // repeated .sample_projectname.db_table1 rows = 10;
  for (unsigned int i = 0, n = this->rows_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->rows(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:sample_projectname.PkgPageQueryTable1Reply)
  return target;
}

int PkgPageQueryTable1Reply::ByteSize() const {
  int total_size = 0;

  // required bool issuccess = 1;
  if (has_issuccess()) {
    total_size += 1 + 1;
  }
  // optional string err = 2;
  if (has_err()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->err());
  }

  // repeated .sample_projectname.db_table1 rows = 10;
  total_size += 1 * this->rows_size();
  for (int i = 0; i < this->rows_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rows(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PkgPageQueryTable1Reply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PkgPageQueryTable1Reply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PkgPageQueryTable1Reply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PkgPageQueryTable1Reply::MergeFrom(const PkgPageQueryTable1Reply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  rows_.MergeFrom(from.rows_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_issuccess()) {
      set_issuccess(from.issuccess());
    }
    if (from.has_err()) {
      set_has_err();
      err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PkgPageQueryTable1Reply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PkgPageQueryTable1Reply::CopyFrom(const PkgPageQueryTable1Reply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PkgPageQueryTable1Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void PkgPageQueryTable1Reply::Swap(PkgPageQueryTable1Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PkgPageQueryTable1Reply::InternalSwap(PkgPageQueryTable1Reply* other) {
  std::swap(issuccess_, other->issuccess_);
  err_.Swap(&other->err_);
  rows_.UnsafeArenaSwap(&other->rows_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PkgPageQueryTable1Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PkgPageQueryTable1Reply_descriptor_;
  metadata.reflection = PkgPageQueryTable1Reply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace sample_projectname

// @@protoc_insertion_point(global_scope)
