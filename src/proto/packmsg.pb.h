// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: packmsg.proto

#ifndef PROTOBUF_packmsg_2eproto__INCLUDED
#define PROTOBUF_packmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace comminternal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_packmsg_2eproto();
void protobuf_AssignDesc_packmsg_2eproto();
void protobuf_ShutdownFile_packmsg_2eproto();

class PkgMsg;
class PkgSessionUser;

enum PkgMsg_EnMsgType {
  PkgMsg_EnMsgType_MSG_NONE = 0,
  PkgMsg_EnMsgType_MSG_REQ = 1,
  PkgMsg_EnMsgType_MSG_RES = 2,
  PkgMsg_EnMsgType_MSG_ALL = 3
};
bool PkgMsg_EnMsgType_IsValid(int value);
const PkgMsg_EnMsgType PkgMsg_EnMsgType_EnMsgType_MIN = PkgMsg_EnMsgType_MSG_NONE;
const PkgMsg_EnMsgType PkgMsg_EnMsgType_EnMsgType_MAX = PkgMsg_EnMsgType_MSG_ALL;
const int PkgMsg_EnMsgType_EnMsgType_ARRAYSIZE = PkgMsg_EnMsgType_EnMsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgType_descriptor();
inline const ::std::string& PkgMsg_EnMsgType_Name(PkgMsg_EnMsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgMsg_EnMsgType_descriptor(), value);
}
inline bool PkgMsg_EnMsgType_Parse(
    const ::std::string& name, PkgMsg_EnMsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgMsg_EnMsgType>(
    PkgMsg_EnMsgType_descriptor(), name, value);
}
enum PkgMsg_EnMsgDirection {
  PkgMsg_EnMsgDirection_MSG_CS = 1,
  PkgMsg_EnMsgDirection_MSG_SC = 2,
  PkgMsg_EnMsgDirection_MSG_C2C = 3,
  PkgMsg_EnMsgDirection_MSG_S2S = 4
};
bool PkgMsg_EnMsgDirection_IsValid(int value);
const PkgMsg_EnMsgDirection PkgMsg_EnMsgDirection_EnMsgDirection_MIN = PkgMsg_EnMsgDirection_MSG_CS;
const PkgMsg_EnMsgDirection PkgMsg_EnMsgDirection_EnMsgDirection_MAX = PkgMsg_EnMsgDirection_MSG_S2S;
const int PkgMsg_EnMsgDirection_EnMsgDirection_ARRAYSIZE = PkgMsg_EnMsgDirection_EnMsgDirection_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgDirection_descriptor();
inline const ::std::string& PkgMsg_EnMsgDirection_Name(PkgMsg_EnMsgDirection value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgMsg_EnMsgDirection_descriptor(), value);
}
inline bool PkgMsg_EnMsgDirection_Parse(
    const ::std::string& name, PkgMsg_EnMsgDirection* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgMsg_EnMsgDirection>(
    PkgMsg_EnMsgDirection_descriptor(), name, value);
}
enum PkgMsg_EnMsgReplyFlag {
  PkgMsg_EnMsgReplyFlag_MSG_ReplyNormal = 1,
  PkgMsg_EnMsgReplyFlag_MSG_ReplyWithReq = 2,
  PkgMsg_EnMsgReplyFlag_MSG_ReplyNO = 3
};
bool PkgMsg_EnMsgReplyFlag_IsValid(int value);
const PkgMsg_EnMsgReplyFlag PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_MIN = PkgMsg_EnMsgReplyFlag_MSG_ReplyNormal;
const PkgMsg_EnMsgReplyFlag PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_MAX = PkgMsg_EnMsgReplyFlag_MSG_ReplyNO;
const int PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_ARRAYSIZE = PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgReplyFlag_descriptor();
inline const ::std::string& PkgMsg_EnMsgReplyFlag_Name(PkgMsg_EnMsgReplyFlag value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgMsg_EnMsgReplyFlag_descriptor(), value);
}
inline bool PkgMsg_EnMsgReplyFlag_Parse(
    const ::std::string& name, PkgMsg_EnMsgReplyFlag* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgMsg_EnMsgReplyFlag>(
    PkgMsg_EnMsgReplyFlag_descriptor(), name, value);
}
enum PkgMsg_EnMsgStatusCode {
  PkgMsg_EnMsgStatusCode_MSG_STATUSNONE = 0,
  PkgMsg_EnMsgStatusCode_MSG_CONNECTED = 1,
  PkgMsg_EnMsgStatusCode_MSG_CLOSED = 2
};
bool PkgMsg_EnMsgStatusCode_IsValid(int value);
const PkgMsg_EnMsgStatusCode PkgMsg_EnMsgStatusCode_EnMsgStatusCode_MIN = PkgMsg_EnMsgStatusCode_MSG_STATUSNONE;
const PkgMsg_EnMsgStatusCode PkgMsg_EnMsgStatusCode_EnMsgStatusCode_MAX = PkgMsg_EnMsgStatusCode_MSG_CLOSED;
const int PkgMsg_EnMsgStatusCode_EnMsgStatusCode_ARRAYSIZE = PkgMsg_EnMsgStatusCode_EnMsgStatusCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* PkgMsg_EnMsgStatusCode_descriptor();
inline const ::std::string& PkgMsg_EnMsgStatusCode_Name(PkgMsg_EnMsgStatusCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    PkgMsg_EnMsgStatusCode_descriptor(), value);
}
inline bool PkgMsg_EnMsgStatusCode_Parse(
    const ::std::string& name, PkgMsg_EnMsgStatusCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PkgMsg_EnMsgStatusCode>(
    PkgMsg_EnMsgStatusCode_descriptor(), name, value);
}
// ===================================================================

class PkgMsg : public ::google::protobuf::Message {
 public:
  PkgMsg();
  virtual ~PkgMsg();

  PkgMsg(const PkgMsg& from);

  inline PkgMsg& operator=(const PkgMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgMsg& default_instance();

  void Swap(PkgMsg* other);

  // implements Message ----------------------------------------------

  inline PkgMsg* New() const { return New(NULL); }

  PkgMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgMsg& from);
  void MergeFrom(const PkgMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef PkgMsg_EnMsgType EnMsgType;
  static const EnMsgType MSG_NONE = PkgMsg_EnMsgType_MSG_NONE;
  static const EnMsgType MSG_REQ = PkgMsg_EnMsgType_MSG_REQ;
  static const EnMsgType MSG_RES = PkgMsg_EnMsgType_MSG_RES;
  static const EnMsgType MSG_ALL = PkgMsg_EnMsgType_MSG_ALL;
  static inline bool EnMsgType_IsValid(int value) {
    return PkgMsg_EnMsgType_IsValid(value);
  }
  static const EnMsgType EnMsgType_MIN =
    PkgMsg_EnMsgType_EnMsgType_MIN;
  static const EnMsgType EnMsgType_MAX =
    PkgMsg_EnMsgType_EnMsgType_MAX;
  static const int EnMsgType_ARRAYSIZE =
    PkgMsg_EnMsgType_EnMsgType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnMsgType_descriptor() {
    return PkgMsg_EnMsgType_descriptor();
  }
  static inline const ::std::string& EnMsgType_Name(EnMsgType value) {
    return PkgMsg_EnMsgType_Name(value);
  }
  static inline bool EnMsgType_Parse(const ::std::string& name,
      EnMsgType* value) {
    return PkgMsg_EnMsgType_Parse(name, value);
  }

  typedef PkgMsg_EnMsgDirection EnMsgDirection;
  static const EnMsgDirection MSG_CS = PkgMsg_EnMsgDirection_MSG_CS;
  static const EnMsgDirection MSG_SC = PkgMsg_EnMsgDirection_MSG_SC;
  static const EnMsgDirection MSG_C2C = PkgMsg_EnMsgDirection_MSG_C2C;
  static const EnMsgDirection MSG_S2S = PkgMsg_EnMsgDirection_MSG_S2S;
  static inline bool EnMsgDirection_IsValid(int value) {
    return PkgMsg_EnMsgDirection_IsValid(value);
  }
  static const EnMsgDirection EnMsgDirection_MIN =
    PkgMsg_EnMsgDirection_EnMsgDirection_MIN;
  static const EnMsgDirection EnMsgDirection_MAX =
    PkgMsg_EnMsgDirection_EnMsgDirection_MAX;
  static const int EnMsgDirection_ARRAYSIZE =
    PkgMsg_EnMsgDirection_EnMsgDirection_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnMsgDirection_descriptor() {
    return PkgMsg_EnMsgDirection_descriptor();
  }
  static inline const ::std::string& EnMsgDirection_Name(EnMsgDirection value) {
    return PkgMsg_EnMsgDirection_Name(value);
  }
  static inline bool EnMsgDirection_Parse(const ::std::string& name,
      EnMsgDirection* value) {
    return PkgMsg_EnMsgDirection_Parse(name, value);
  }

  typedef PkgMsg_EnMsgReplyFlag EnMsgReplyFlag;
  static const EnMsgReplyFlag MSG_ReplyNormal = PkgMsg_EnMsgReplyFlag_MSG_ReplyNormal;
  static const EnMsgReplyFlag MSG_ReplyWithReq = PkgMsg_EnMsgReplyFlag_MSG_ReplyWithReq;
  static const EnMsgReplyFlag MSG_ReplyNO = PkgMsg_EnMsgReplyFlag_MSG_ReplyNO;
  static inline bool EnMsgReplyFlag_IsValid(int value) {
    return PkgMsg_EnMsgReplyFlag_IsValid(value);
  }
  static const EnMsgReplyFlag EnMsgReplyFlag_MIN =
    PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_MIN;
  static const EnMsgReplyFlag EnMsgReplyFlag_MAX =
    PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_MAX;
  static const int EnMsgReplyFlag_ARRAYSIZE =
    PkgMsg_EnMsgReplyFlag_EnMsgReplyFlag_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnMsgReplyFlag_descriptor() {
    return PkgMsg_EnMsgReplyFlag_descriptor();
  }
  static inline const ::std::string& EnMsgReplyFlag_Name(EnMsgReplyFlag value) {
    return PkgMsg_EnMsgReplyFlag_Name(value);
  }
  static inline bool EnMsgReplyFlag_Parse(const ::std::string& name,
      EnMsgReplyFlag* value) {
    return PkgMsg_EnMsgReplyFlag_Parse(name, value);
  }

  typedef PkgMsg_EnMsgStatusCode EnMsgStatusCode;
  static const EnMsgStatusCode MSG_STATUSNONE = PkgMsg_EnMsgStatusCode_MSG_STATUSNONE;
  static const EnMsgStatusCode MSG_CONNECTED = PkgMsg_EnMsgStatusCode_MSG_CONNECTED;
  static const EnMsgStatusCode MSG_CLOSED = PkgMsg_EnMsgStatusCode_MSG_CLOSED;
  static inline bool EnMsgStatusCode_IsValid(int value) {
    return PkgMsg_EnMsgStatusCode_IsValid(value);
  }
  static const EnMsgStatusCode EnMsgStatusCode_MIN =
    PkgMsg_EnMsgStatusCode_EnMsgStatusCode_MIN;
  static const EnMsgStatusCode EnMsgStatusCode_MAX =
    PkgMsg_EnMsgStatusCode_EnMsgStatusCode_MAX;
  static const int EnMsgStatusCode_ARRAYSIZE =
    PkgMsg_EnMsgStatusCode_EnMsgStatusCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EnMsgStatusCode_descriptor() {
    return PkgMsg_EnMsgStatusCode_descriptor();
  }
  static inline const ::std::string& EnMsgStatusCode_Name(EnMsgStatusCode value) {
    return PkgMsg_EnMsgStatusCode_Name(value);
  }
  static inline bool EnMsgStatusCode_Parse(const ::std::string& name,
      EnMsgStatusCode* value) {
    return PkgMsg_EnMsgStatusCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .comminternal.PkgMsg.EnMsgType msgtype = 1 [default = MSG_REQ];
  inline bool has_msgtype() const;
  inline void clear_msgtype();
  static const int kMsgtypeFieldNumber = 1;
  inline ::comminternal::PkgMsg_EnMsgType msgtype() const;
  inline void set_msgtype(::comminternal::PkgMsg_EnMsgType value);

  // optional bool issuc = 2;
  inline bool has_issuc() const;
  inline void clear_issuc();
  static const int kIssucFieldNumber = 2;
  inline bool issuc() const;
  inline void set_issuc(bool value);

  // optional string err = 3;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 3;
  inline const ::std::string& err() const;
  inline void set_err(const ::std::string& value);
  inline void set_err(const char* value);
  inline void set_err(const char* value, size_t size);
  inline ::std::string* mutable_err();
  inline ::std::string* release_err();
  inline void set_allocated_err(::std::string* err);

  // optional string errdevdesc = 4;
  inline bool has_errdevdesc() const;
  inline void clear_errdevdesc();
  static const int kErrdevdescFieldNumber = 4;
  inline const ::std::string& errdevdesc() const;
  inline void set_errdevdesc(const ::std::string& value);
  inline void set_errdevdesc(const char* value);
  inline void set_errdevdesc(const char* value, size_t size);
  inline ::std::string* mutable_errdevdesc();
  inline ::std::string* release_errdevdesc();
  inline void set_allocated_errdevdesc(::std::string* errdevdesc);

  // optional .comminternal.PkgMsg.EnMsgDirection msgdirection = 5 [default = MSG_CS];
  inline bool has_msgdirection() const;
  inline void clear_msgdirection();
  static const int kMsgdirectionFieldNumber = 5;
  inline ::comminternal::PkgMsg_EnMsgDirection msgdirection() const;
  inline void set_msgdirection(::comminternal::PkgMsg_EnMsgDirection value);

  // optional .comminternal.PkgMsg.EnMsgReplyFlag msgreplyflag = 6 [default = MSG_ReplyNormal];
  inline bool has_msgreplyflag() const;
  inline void clear_msgreplyflag();
  static const int kMsgreplyflagFieldNumber = 6;
  inline ::comminternal::PkgMsg_EnMsgReplyFlag msgreplyflag() const;
  inline void set_msgreplyflag(::comminternal::PkgMsg_EnMsgReplyFlag value);

  // optional string reqmsgtype = 11;
  inline bool has_reqmsgtype() const;
  inline void clear_reqmsgtype();
  static const int kReqmsgtypeFieldNumber = 11;
  inline const ::std::string& reqmsgtype() const;
  inline void set_reqmsgtype(const ::std::string& value);
  inline void set_reqmsgtype(const char* value);
  inline void set_reqmsgtype(const char* value, size_t size);
  inline ::std::string* mutable_reqmsgtype();
  inline ::std::string* release_reqmsgtype();
  inline void set_allocated_reqmsgtype(::std::string* reqmsgtype);

  // optional string reqmsgdata = 12;
  inline bool has_reqmsgdata() const;
  inline void clear_reqmsgdata();
  static const int kReqmsgdataFieldNumber = 12;
  inline const ::std::string& reqmsgdata() const;
  inline void set_reqmsgdata(const ::std::string& value);
  inline void set_reqmsgdata(const char* value);
  inline void set_reqmsgdata(const char* value, size_t size);
  inline ::std::string* mutable_reqmsgdata();
  inline ::std::string* release_reqmsgdata();
  inline void set_allocated_reqmsgdata(::std::string* reqmsgdata);

  // optional string resmsgtype = 13;
  inline bool has_resmsgtype() const;
  inline void clear_resmsgtype();
  static const int kResmsgtypeFieldNumber = 13;
  inline const ::std::string& resmsgtype() const;
  inline void set_resmsgtype(const ::std::string& value);
  inline void set_resmsgtype(const char* value);
  inline void set_resmsgtype(const char* value, size_t size);
  inline ::std::string* mutable_resmsgtype();
  inline ::std::string* release_resmsgtype();
  inline void set_allocated_resmsgtype(::std::string* resmsgtype);

  // optional string resmsgdata = 14;
  inline bool has_resmsgdata() const;
  inline void clear_resmsgdata();
  static const int kResmsgdataFieldNumber = 14;
  inline const ::std::string& resmsgdata() const;
  inline void set_resmsgdata(const ::std::string& value);
  inline void set_resmsgdata(const char* value);
  inline void set_resmsgdata(const char* value, size_t size);
  inline ::std::string* mutable_resmsgdata();
  inline ::std::string* release_resmsgdata();
  inline void set_allocated_resmsgdata(::std::string* resmsgdata);

  // optional string msguuid = 50;
  inline bool has_msguuid() const;
  inline void clear_msguuid();
  static const int kMsguuidFieldNumber = 50;
  inline const ::std::string& msguuid() const;
  inline void set_msguuid(const ::std::string& value);
  inline void set_msguuid(const char* value);
  inline void set_msguuid(const char* value, size_t size);
  inline ::std::string* mutable_msguuid();
  inline ::std::string* release_msguuid();
  inline void set_allocated_msguuid(::std::string* msguuid);

  // optional .comminternal.PkgMsg.EnMsgStatusCode enmsgstatuscode = 100 [default = MSG_STATUSNONE];
  inline bool has_enmsgstatuscode() const;
  inline void clear_enmsgstatuscode();
  static const int kEnmsgstatuscodeFieldNumber = 100;
  inline ::comminternal::PkgMsg_EnMsgStatusCode enmsgstatuscode() const;
  inline void set_enmsgstatuscode(::comminternal::PkgMsg_EnMsgStatusCode value);

  // @@protoc_insertion_point(class_scope:comminternal.PkgMsg)
 private:
  inline void set_has_msgtype();
  inline void clear_has_msgtype();
  inline void set_has_issuc();
  inline void clear_has_issuc();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_errdevdesc();
  inline void clear_has_errdevdesc();
  inline void set_has_msgdirection();
  inline void clear_has_msgdirection();
  inline void set_has_msgreplyflag();
  inline void clear_has_msgreplyflag();
  inline void set_has_reqmsgtype();
  inline void clear_has_reqmsgtype();
  inline void set_has_reqmsgdata();
  inline void clear_has_reqmsgdata();
  inline void set_has_resmsgtype();
  inline void clear_has_resmsgtype();
  inline void set_has_resmsgdata();
  inline void clear_has_resmsgdata();
  inline void set_has_msguuid();
  inline void clear_has_msguuid();
  inline void set_has_enmsgstatuscode();
  inline void clear_has_enmsgstatuscode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int msgtype_;
  bool issuc_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::internal::ArenaStringPtr errdevdesc_;
  int msgdirection_;
  int msgreplyflag_;
  ::google::protobuf::internal::ArenaStringPtr reqmsgtype_;
  ::google::protobuf::internal::ArenaStringPtr reqmsgdata_;
  ::google::protobuf::internal::ArenaStringPtr resmsgtype_;
  ::google::protobuf::internal::ArenaStringPtr resmsgdata_;
  ::google::protobuf::internal::ArenaStringPtr msguuid_;
  int enmsgstatuscode_;
  friend void  protobuf_AddDesc_packmsg_2eproto();
  friend void protobuf_AssignDesc_packmsg_2eproto();
  friend void protobuf_ShutdownFile_packmsg_2eproto();

  void InitAsDefaultInstance();
  static PkgMsg* default_instance_;
};
// -------------------------------------------------------------------

class PkgSessionUser : public ::google::protobuf::Message {
 public:
  PkgSessionUser();
  virtual ~PkgSessionUser();

  PkgSessionUser(const PkgSessionUser& from);

  inline PkgSessionUser& operator=(const PkgSessionUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PkgSessionUser& default_instance();

  void Swap(PkgSessionUser* other);

  // implements Message ----------------------------------------------

  inline PkgSessionUser* New() const { return New(NULL); }

  PkgSessionUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PkgSessionUser& from);
  void MergeFrom(const PkgSessionUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PkgSessionUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string useruuid = 1;
  inline bool has_useruuid() const;
  inline void clear_useruuid();
  static const int kUseruuidFieldNumber = 1;
  inline const ::std::string& useruuid() const;
  inline void set_useruuid(const ::std::string& value);
  inline void set_useruuid(const char* value);
  inline void set_useruuid(const char* value, size_t size);
  inline ::std::string* mutable_useruuid();
  inline ::std::string* release_useruuid();
  inline void set_allocated_useruuid(::std::string* useruuid);

  // optional bool islogined = 10 [default = false];
  inline bool has_islogined() const;
  inline void clear_islogined();
  static const int kIsloginedFieldNumber = 10;
  inline bool islogined() const;
  inline void set_islogined(bool value);

  // @@protoc_insertion_point(class_scope:comminternal.PkgSessionUser)
 private:
  inline void set_has_useruuid();
  inline void clear_has_useruuid();
  inline void set_has_islogined();
  inline void clear_has_islogined();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr useruuid_;
  bool islogined_;
  friend void  protobuf_AddDesc_packmsg_2eproto();
  friend void protobuf_AssignDesc_packmsg_2eproto();
  friend void protobuf_ShutdownFile_packmsg_2eproto();

  void InitAsDefaultInstance();
  static PkgSessionUser* default_instance_;
};
// ===================================================================


// ===================================================================

// PkgMsg

// optional .comminternal.PkgMsg.EnMsgType msgtype = 1 [default = MSG_REQ];
inline bool PkgMsg::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgMsg::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgMsg::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgMsg::clear_msgtype() {
  msgtype_ = 1;
  clear_has_msgtype();
}
inline ::comminternal::PkgMsg_EnMsgType PkgMsg::msgtype() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.msgtype)
  return static_cast< ::comminternal::PkgMsg_EnMsgType >(msgtype_);
}
inline void PkgMsg::set_msgtype(::comminternal::PkgMsg_EnMsgType value) {
  assert(::comminternal::PkgMsg_EnMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.msgtype)
}

// optional bool issuc = 2;
inline bool PkgMsg::has_issuc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgMsg::set_has_issuc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgMsg::clear_has_issuc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgMsg::clear_issuc() {
  issuc_ = false;
  clear_has_issuc();
}
inline bool PkgMsg::issuc() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.issuc)
  return issuc_;
}
inline void PkgMsg::set_issuc(bool value) {
  set_has_issuc();
  issuc_ = value;
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.issuc)
}

// optional string err = 3;
inline bool PkgMsg::has_err() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PkgMsg::set_has_err() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PkgMsg::clear_has_err() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PkgMsg::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& PkgMsg::err() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.err)
  return err_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.err)
}
inline void PkgMsg::set_err(const char* value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.err)
}
inline void PkgMsg::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.err)
}
inline ::std::string* PkgMsg::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_err() {
  clear_has_err();
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.err)
}

// optional string errdevdesc = 4;
inline bool PkgMsg::has_errdevdesc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PkgMsg::set_has_errdevdesc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PkgMsg::clear_has_errdevdesc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PkgMsg::clear_errdevdesc() {
  errdevdesc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errdevdesc();
}
inline const ::std::string& PkgMsg::errdevdesc() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.errdevdesc)
  return errdevdesc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_errdevdesc(const ::std::string& value) {
  set_has_errdevdesc();
  errdevdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.errdevdesc)
}
inline void PkgMsg::set_errdevdesc(const char* value) {
  set_has_errdevdesc();
  errdevdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.errdevdesc)
}
inline void PkgMsg::set_errdevdesc(const char* value, size_t size) {
  set_has_errdevdesc();
  errdevdesc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.errdevdesc)
}
inline ::std::string* PkgMsg::mutable_errdevdesc() {
  set_has_errdevdesc();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.errdevdesc)
  return errdevdesc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_errdevdesc() {
  clear_has_errdevdesc();
  return errdevdesc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_errdevdesc(::std::string* errdevdesc) {
  if (errdevdesc != NULL) {
    set_has_errdevdesc();
  } else {
    clear_has_errdevdesc();
  }
  errdevdesc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errdevdesc);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.errdevdesc)
}

// optional .comminternal.PkgMsg.EnMsgDirection msgdirection = 5 [default = MSG_CS];
inline bool PkgMsg::has_msgdirection() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PkgMsg::set_has_msgdirection() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PkgMsg::clear_has_msgdirection() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PkgMsg::clear_msgdirection() {
  msgdirection_ = 1;
  clear_has_msgdirection();
}
inline ::comminternal::PkgMsg_EnMsgDirection PkgMsg::msgdirection() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.msgdirection)
  return static_cast< ::comminternal::PkgMsg_EnMsgDirection >(msgdirection_);
}
inline void PkgMsg::set_msgdirection(::comminternal::PkgMsg_EnMsgDirection value) {
  assert(::comminternal::PkgMsg_EnMsgDirection_IsValid(value));
  set_has_msgdirection();
  msgdirection_ = value;
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.msgdirection)
}

// optional .comminternal.PkgMsg.EnMsgReplyFlag msgreplyflag = 6 [default = MSG_ReplyNormal];
inline bool PkgMsg::has_msgreplyflag() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PkgMsg::set_has_msgreplyflag() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PkgMsg::clear_has_msgreplyflag() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PkgMsg::clear_msgreplyflag() {
  msgreplyflag_ = 1;
  clear_has_msgreplyflag();
}
inline ::comminternal::PkgMsg_EnMsgReplyFlag PkgMsg::msgreplyflag() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.msgreplyflag)
  return static_cast< ::comminternal::PkgMsg_EnMsgReplyFlag >(msgreplyflag_);
}
inline void PkgMsg::set_msgreplyflag(::comminternal::PkgMsg_EnMsgReplyFlag value) {
  assert(::comminternal::PkgMsg_EnMsgReplyFlag_IsValid(value));
  set_has_msgreplyflag();
  msgreplyflag_ = value;
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.msgreplyflag)
}

// optional string reqmsgtype = 11;
inline bool PkgMsg::has_reqmsgtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PkgMsg::set_has_reqmsgtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PkgMsg::clear_has_reqmsgtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PkgMsg::clear_reqmsgtype() {
  reqmsgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reqmsgtype();
}
inline const ::std::string& PkgMsg::reqmsgtype() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.reqmsgtype)
  return reqmsgtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_reqmsgtype(const ::std::string& value) {
  set_has_reqmsgtype();
  reqmsgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.reqmsgtype)
}
inline void PkgMsg::set_reqmsgtype(const char* value) {
  set_has_reqmsgtype();
  reqmsgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.reqmsgtype)
}
inline void PkgMsg::set_reqmsgtype(const char* value, size_t size) {
  set_has_reqmsgtype();
  reqmsgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.reqmsgtype)
}
inline ::std::string* PkgMsg::mutable_reqmsgtype() {
  set_has_reqmsgtype();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.reqmsgtype)
  return reqmsgtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_reqmsgtype() {
  clear_has_reqmsgtype();
  return reqmsgtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_reqmsgtype(::std::string* reqmsgtype) {
  if (reqmsgtype != NULL) {
    set_has_reqmsgtype();
  } else {
    clear_has_reqmsgtype();
  }
  reqmsgtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqmsgtype);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.reqmsgtype)
}

// optional string reqmsgdata = 12;
inline bool PkgMsg::has_reqmsgdata() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PkgMsg::set_has_reqmsgdata() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PkgMsg::clear_has_reqmsgdata() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PkgMsg::clear_reqmsgdata() {
  reqmsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reqmsgdata();
}
inline const ::std::string& PkgMsg::reqmsgdata() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.reqmsgdata)
  return reqmsgdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_reqmsgdata(const ::std::string& value) {
  set_has_reqmsgdata();
  reqmsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.reqmsgdata)
}
inline void PkgMsg::set_reqmsgdata(const char* value) {
  set_has_reqmsgdata();
  reqmsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.reqmsgdata)
}
inline void PkgMsg::set_reqmsgdata(const char* value, size_t size) {
  set_has_reqmsgdata();
  reqmsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.reqmsgdata)
}
inline ::std::string* PkgMsg::mutable_reqmsgdata() {
  set_has_reqmsgdata();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.reqmsgdata)
  return reqmsgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_reqmsgdata() {
  clear_has_reqmsgdata();
  return reqmsgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_reqmsgdata(::std::string* reqmsgdata) {
  if (reqmsgdata != NULL) {
    set_has_reqmsgdata();
  } else {
    clear_has_reqmsgdata();
  }
  reqmsgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reqmsgdata);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.reqmsgdata)
}

// optional string resmsgtype = 13;
inline bool PkgMsg::has_resmsgtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PkgMsg::set_has_resmsgtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PkgMsg::clear_has_resmsgtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PkgMsg::clear_resmsgtype() {
  resmsgtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_resmsgtype();
}
inline const ::std::string& PkgMsg::resmsgtype() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.resmsgtype)
  return resmsgtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_resmsgtype(const ::std::string& value) {
  set_has_resmsgtype();
  resmsgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.resmsgtype)
}
inline void PkgMsg::set_resmsgtype(const char* value) {
  set_has_resmsgtype();
  resmsgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.resmsgtype)
}
inline void PkgMsg::set_resmsgtype(const char* value, size_t size) {
  set_has_resmsgtype();
  resmsgtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.resmsgtype)
}
inline ::std::string* PkgMsg::mutable_resmsgtype() {
  set_has_resmsgtype();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.resmsgtype)
  return resmsgtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_resmsgtype() {
  clear_has_resmsgtype();
  return resmsgtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_resmsgtype(::std::string* resmsgtype) {
  if (resmsgtype != NULL) {
    set_has_resmsgtype();
  } else {
    clear_has_resmsgtype();
  }
  resmsgtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resmsgtype);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.resmsgtype)
}

// optional string resmsgdata = 14;
inline bool PkgMsg::has_resmsgdata() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PkgMsg::set_has_resmsgdata() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PkgMsg::clear_has_resmsgdata() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PkgMsg::clear_resmsgdata() {
  resmsgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_resmsgdata();
}
inline const ::std::string& PkgMsg::resmsgdata() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.resmsgdata)
  return resmsgdata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_resmsgdata(const ::std::string& value) {
  set_has_resmsgdata();
  resmsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.resmsgdata)
}
inline void PkgMsg::set_resmsgdata(const char* value) {
  set_has_resmsgdata();
  resmsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.resmsgdata)
}
inline void PkgMsg::set_resmsgdata(const char* value, size_t size) {
  set_has_resmsgdata();
  resmsgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.resmsgdata)
}
inline ::std::string* PkgMsg::mutable_resmsgdata() {
  set_has_resmsgdata();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.resmsgdata)
  return resmsgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_resmsgdata() {
  clear_has_resmsgdata();
  return resmsgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_resmsgdata(::std::string* resmsgdata) {
  if (resmsgdata != NULL) {
    set_has_resmsgdata();
  } else {
    clear_has_resmsgdata();
  }
  resmsgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resmsgdata);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.resmsgdata)
}

// optional string msguuid = 50;
inline bool PkgMsg::has_msguuid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PkgMsg::set_has_msguuid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PkgMsg::clear_has_msguuid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PkgMsg::clear_msguuid() {
  msguuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msguuid();
}
inline const ::std::string& PkgMsg::msguuid() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.msguuid)
  return msguuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_msguuid(const ::std::string& value) {
  set_has_msguuid();
  msguuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.msguuid)
}
inline void PkgMsg::set_msguuid(const char* value) {
  set_has_msguuid();
  msguuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgMsg.msguuid)
}
inline void PkgMsg::set_msguuid(const char* value, size_t size) {
  set_has_msguuid();
  msguuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgMsg.msguuid)
}
inline ::std::string* PkgMsg::mutable_msguuid() {
  set_has_msguuid();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgMsg.msguuid)
  return msguuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgMsg::release_msguuid() {
  clear_has_msguuid();
  return msguuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgMsg::set_allocated_msguuid(::std::string* msguuid) {
  if (msguuid != NULL) {
    set_has_msguuid();
  } else {
    clear_has_msguuid();
  }
  msguuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msguuid);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgMsg.msguuid)
}

// optional .comminternal.PkgMsg.EnMsgStatusCode enmsgstatuscode = 100 [default = MSG_STATUSNONE];
inline bool PkgMsg::has_enmsgstatuscode() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PkgMsg::set_has_enmsgstatuscode() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PkgMsg::clear_has_enmsgstatuscode() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PkgMsg::clear_enmsgstatuscode() {
  enmsgstatuscode_ = 0;
  clear_has_enmsgstatuscode();
}
inline ::comminternal::PkgMsg_EnMsgStatusCode PkgMsg::enmsgstatuscode() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgMsg.enmsgstatuscode)
  return static_cast< ::comminternal::PkgMsg_EnMsgStatusCode >(enmsgstatuscode_);
}
inline void PkgMsg::set_enmsgstatuscode(::comminternal::PkgMsg_EnMsgStatusCode value) {
  assert(::comminternal::PkgMsg_EnMsgStatusCode_IsValid(value));
  set_has_enmsgstatuscode();
  enmsgstatuscode_ = value;
  // @@protoc_insertion_point(field_set:comminternal.PkgMsg.enmsgstatuscode)
}

// -------------------------------------------------------------------

// PkgSessionUser

// optional string useruuid = 1;
inline bool PkgSessionUser::has_useruuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PkgSessionUser::set_has_useruuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PkgSessionUser::clear_has_useruuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PkgSessionUser::clear_useruuid() {
  useruuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_useruuid();
}
inline const ::std::string& PkgSessionUser::useruuid() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgSessionUser.useruuid)
  return useruuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSessionUser::set_useruuid(const ::std::string& value) {
  set_has_useruuid();
  useruuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:comminternal.PkgSessionUser.useruuid)
}
inline void PkgSessionUser::set_useruuid(const char* value) {
  set_has_useruuid();
  useruuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:comminternal.PkgSessionUser.useruuid)
}
inline void PkgSessionUser::set_useruuid(const char* value, size_t size) {
  set_has_useruuid();
  useruuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:comminternal.PkgSessionUser.useruuid)
}
inline ::std::string* PkgSessionUser::mutable_useruuid() {
  set_has_useruuid();
  // @@protoc_insertion_point(field_mutable:comminternal.PkgSessionUser.useruuid)
  return useruuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PkgSessionUser::release_useruuid() {
  clear_has_useruuid();
  return useruuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PkgSessionUser::set_allocated_useruuid(::std::string* useruuid) {
  if (useruuid != NULL) {
    set_has_useruuid();
  } else {
    clear_has_useruuid();
  }
  useruuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useruuid);
  // @@protoc_insertion_point(field_set_allocated:comminternal.PkgSessionUser.useruuid)
}

// optional bool islogined = 10 [default = false];
inline bool PkgSessionUser::has_islogined() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PkgSessionUser::set_has_islogined() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PkgSessionUser::clear_has_islogined() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PkgSessionUser::clear_islogined() {
  islogined_ = false;
  clear_has_islogined();
}
inline bool PkgSessionUser::islogined() const {
  // @@protoc_insertion_point(field_get:comminternal.PkgSessionUser.islogined)
  return islogined_;
}
inline void PkgSessionUser::set_islogined(bool value) {
  set_has_islogined();
  islogined_ = value;
  // @@protoc_insertion_point(field_set:comminternal.PkgSessionUser.islogined)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace comminternal

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::comminternal::PkgMsg_EnMsgType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comminternal::PkgMsg_EnMsgType>() {
  return ::comminternal::PkgMsg_EnMsgType_descriptor();
}
template <> struct is_proto_enum< ::comminternal::PkgMsg_EnMsgDirection> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comminternal::PkgMsg_EnMsgDirection>() {
  return ::comminternal::PkgMsg_EnMsgDirection_descriptor();
}
template <> struct is_proto_enum< ::comminternal::PkgMsg_EnMsgReplyFlag> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comminternal::PkgMsg_EnMsgReplyFlag>() {
  return ::comminternal::PkgMsg_EnMsgReplyFlag_descriptor();
}
template <> struct is_proto_enum< ::comminternal::PkgMsg_EnMsgStatusCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::comminternal::PkgMsg_EnMsgStatusCode>() {
  return ::comminternal::PkgMsg_EnMsgStatusCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_packmsg_2eproto__INCLUDED
